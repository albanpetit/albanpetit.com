<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Alban Petit</title><link>https://albanpetit.com/categories/projects/</link><description>Recent content in Projects on Alban Petit</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 08 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://albanpetit.com/categories/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>3D printed projects</title><link>https://albanpetit.com/post/3d-printed-projects/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://albanpetit.com/post/3d-printed-projects/</guid><description>&lt;img src="https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-2.jpg" alt="Featured image of post 3D printed projects" />&lt;h1 id="a-bambulab-a1-projects-and-lots-of-printing">A Bambulab A1, Projects, and Lots of Printing!
&lt;/h1>&lt;p>My Bambulab A1 has finally arrived! I had been wanting an &lt;em>Ender 5&lt;/em> for a long time, and I was excited to see what this one could do. After a few tweaks and some test prints, I quickly wanted to start designing my own models. Here are my first projects, designed to meet specific needs.&lt;/p>
&lt;h2 id="-deck-box-for-altered">🃏 Deck Box for &lt;em>Altered&lt;/em>
&lt;/h2>&lt;p>I really enjoy &lt;em>Altered&lt;/em>, a card game with original mechanics and a fascinating universe. But, as with most card games, storage quickly becomes a problem. The existing solutions didn’t quite suit me, so I thought: &amp;ldquo;why not design my own box?&amp;rdquo;&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-1.jpg"
width="3024"
height="4032"
srcset="https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-1_hu_f755b5565f1e3fa5.jpg 480w, https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-1_hu_643f760e70e66c4e.jpg 1024w"
loading="lazy"
alt="Photo 1"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
> &lt;img src="https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-2.jpg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-2_hu_7dd7bb5d73e7ef28.jpg 480w, https://albanpetit.com/post/3d-printed-projects/altered-deck-box/print-2_hu_699e9c7cc5e33a50.jpg 1024w"
loading="lazy"
alt="Photo 2"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h3 id="-why-this-box">🔹 Why this box?
&lt;/h3>&lt;ul>
&lt;li>A format perfectly suited for &lt;em>Altered&lt;/em> cards, even sleeved.&lt;/li>
&lt;li>An optimized design for easy, support-free printing.&lt;/li>
&lt;li>Modular dividers to adjust the interior space depending on the number of cards.&lt;/li>
&lt;li>A snug-fitting lid to prevent accidental openings.&lt;/li>
&lt;/ul>
&lt;h3 id="-download">📥 Download:
&lt;/h3>&lt;p>The model is available on MakerWorld.&lt;/p>
&lt;h2 id="-customizable-handle">🔧 Customizable Handle
&lt;/h2>&lt;p>Another everyday issue: broken or poorly fitted handles. Instead of looking for a pre-made model, I wanted to create a parametric design in OpenSCAD that I could adapt to any situation.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/3d-printed-projects/customizable-handle/print-1.jpeg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/3d-printed-projects/customizable-handle/print-1_hu_b2106ef65b797f83.jpeg 480w, https://albanpetit.com/post/3d-printed-projects/customizable-handle/print-1_hu_9f9b0bdaa0fd71f6.jpeg 1024w"
loading="lazy"
alt="Photo 1"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/3d-printed-projects/customizable-handle/render-2.jpg"
width="1600"
height="1200"
srcset="https://albanpetit.com/post/3d-printed-projects/customizable-handle/render-2_hu_909fc30fe7d533f7.jpg 480w, https://albanpetit.com/post/3d-printed-projects/customizable-handle/render-2_hu_27ca9067275823bb.jpg 1024w"
loading="lazy"
alt="Render 1"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h3 id="-why-this-handle">🔹 Why this handle?
&lt;/h3>&lt;ul>
&lt;li>Fully customizable: length, diameter, grip shape, hole size—everything can be adjusted.&lt;/li>
&lt;li>Support-free printing, simple and efficient.&lt;/li>
&lt;li>Suitable for many uses: replacing broken handles, improving grip ergonomics, customizing tools…&lt;/li>
&lt;/ul>
&lt;h3 id="-download-1">📥 Download:
&lt;/h3>&lt;p>The model is available on MakerWorld and GitHub.&lt;/p>
&lt;h1 id="-milestone-over-500-hours-of-printing-later">🧪 Milestone: Over 500 Hours of Printing Later&amp;hellip;
&lt;/h1>&lt;p>After several months of use and over &lt;strong>500 hours of printing&lt;/strong>, I&amp;rsquo;m starting to really understand the capabilities of the Bambulab A1!&lt;/p>
&lt;p>One of the most useful projects I’ve worked on recently: a storage system for my electronic components.&lt;/p>
&lt;h2 id="-a-simple-storage-system-for-electronic-components">🧰 A Simple Storage System for Electronic Components
&lt;/h2>&lt;p>When you tinker with electronics, you quickly accumulate lots of components. And without a bit of organization, it becomes a real headache to know what you have… or where you stored it. I often ended up reordering parts I already had.&lt;/p>
&lt;p>So I set up a small storage system that fits the way I work: inexpensive, expandable, and tailored to my needs.&lt;/p>
&lt;h3 id="-the-concept">🔹 The concept?
&lt;/h3>&lt;p>Antistatic bags, 3D printed boxes, and a simple Excel spreadsheet. That’s it!&lt;/p>
&lt;p>Each component goes into an antistatic bag. The bags are then stored vertically in 3D printed boxes that I custom-designed to fit their size.&lt;/p>
&lt;p>The bags are easy to label and provide good protection for sensitive components while staying very affordable.&lt;br>
The printed boxes keep everything neatly upright.&lt;br>
It’s modular: whenever I need more space, I just print another holder.&lt;/p>
&lt;p>I stick a label (handwritten or printed) on each bag with a reference ID that matches an entry in my Excel sheet. The spreadsheet includes the reference, supplier link, datasheet, package type, and quantity—so I don’t reorder what I already have.&lt;/p>
&lt;p>The design is simple and efficient. No supports, and a fast print.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/3d-printed-projects/electonic-components-storage/print-1.jpg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/3d-printed-projects/electonic-components-storage/print-1_hu_ceaaa374afe0553f.jpg 480w, https://albanpetit.com/post/3d-printed-projects/electonic-components-storage/print-1_hu_9d288ed8b1b999b4.jpg 1024w"
loading="lazy"
alt="Photo 1"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/3d-printed-projects/electonic-components-storage/bag-1.jpg"
width="3024"
height="4032"
srcset="https://albanpetit.com/post/3d-printed-projects/electonic-components-storage/bag-1_hu_ee70f5520aad49d8.jpg 480w, https://albanpetit.com/post/3d-printed-projects/electonic-components-storage/bag-1_hu_8ae43894083f1a8d.jpg 1024w"
loading="lazy"
alt="Photo 2"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
>&lt;/p>
&lt;h3 id="-download--materials">📥 Download &amp;amp; Materials:
&lt;/h3>&lt;p>The STL files are available on MakerWorld and on &lt;a class="link" href="https://github.com/albanpetit/3d-printed-projects" target="_blank" rel="noopener"
>GitHub&lt;/a>.&lt;br>
As for the bags, nothing fancy—they&amp;rsquo;re available from most electronics suppliers. I use 5x8&amp;quot; antistatic bags, also compatible with 5x7&amp;quot; ones like in the photo.&lt;br>
&lt;a class="link" href="https://www.mouser.fr/ProductDetail/SCS/30058?qs=atelM%2FHH1ECEPEBWw31qNQ%3D%3D" target="_blank" rel="noopener"
>Mouser&lt;/a>&lt;/p>
&lt;h1 id="-whats-next">🚀 What’s Next?
&lt;/h1>&lt;p>These projects are just a glimpse of what I’ve been able to create with the Bambulab A1. Between everyday objects, game accessories, and practical solutions, I plan to keep experimenting. More ideas are already in the works, and I’ll be sharing them here soon!&lt;/p>
&lt;p>💬 If you have suggestions for models, or if you&amp;rsquo;d like a copy of the Excel spreadsheet I use—just let me know!&lt;/p>
&lt;ul>
&lt;li>🔗 All My 3D Projects&lt;/li>
&lt;li>🔗 &lt;a class="link" href="https://github.com/albanpetit/3d-printed-projects" target="_blank" rel="noopener"
>GitHub - 3D Printed Projects&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>ADXL335 Accelerometer</title><link>https://albanpetit.com/post/adxl-335-accelerometer/</link><pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate><guid>https://albanpetit.com/post/adxl-335-accelerometer/</guid><description>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/main.jpg" alt="Featured image of post ADXL335 Accelerometer" />&lt;p>In this article, I take you through my latest project: a custom PCB designed around a MEMS accelerometer. This project, although relatively simple in its application, highlights a fascinating electronic component, both in terms of its internal operation and its applications. This electronic board will later be used in other experiments and projects.&lt;/p>
&lt;h2 id="mems-accelerometers">MEMS Accelerometers
&lt;/h2>&lt;figure style="float:left; width: 160px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/mems.jpg" width="160" float="left">
&lt;/figure>
&lt;p>MEMS accelerometers are compact devices that leverage microfabrication to integrate mechanical elements, sensors, and actuators onto a tiny silicon chip. At the core of these devices is a MEMS structure consisting of microstructures such as beams or cantilevers that react to external forces.&lt;/p>
&lt;h3 id="operating-principle">Operating Principle
&lt;/h3>&lt;p>The principle is based on inertia: an object at rest tends to remain stationary, while a moving object continues in its trajectory unless subjected to an external force. The MEMS accelerometer uses this concept to measure acceleration.&lt;/p>
&lt;p>Inside the structure, a mass suspended by flexible beams moves in response to accelerations. This mechanical deviation is then converted into an electrical signal by an integrated capacitive or piezoelectric sensor.&lt;/p>
&lt;h3 id="translating-mechanical-motion-into-electrical-signals">Translating Mechanical Motion into Electrical Signals
&lt;/h3>&lt;p>When acceleration is applied, the mass moves, causing a change in capacitance or generating a voltage proportional to the applied force. This signal is then processed to provide usable acceleration data.&lt;/p>
&lt;h2 id="electronic-board-design">Electronic Board Design
&lt;/h2>&lt;p>This PCB is compact and easy to integrate into various projects. It includes an AP2112 voltage regulator to ensure a stable 3.3V power supply, allowing compatibility with 5V devices like Arduino boards. Its dimensions are 19mm x 24mm, and it features two connectors:&lt;/p>
&lt;ul>
&lt;li>One for 5V power input&lt;/li>
&lt;li>Another for the analog acceleration data outputs on the X, Y, and Z axes&lt;/li>
&lt;/ul>
&lt;h3 id="main-components">Main Components
&lt;/h3>&lt;p>On this electronic board, two components are the most important: the regulator and the accelerometer.&lt;/p>
&lt;h4 id="ap2112k-33">AP2112K-3.3
&lt;/h4>&lt;p>This linear regulator in &lt;strong>SOT-23-5&lt;/strong> package is extremely common, used in many hobbyist electronic boards. It appears in many designs from Adafruit or Sparkfun. It is a fixed voltage low-dropout linear regulator, available in multiple variants: 1.2V, 1.8V, 2.5V, 2.6V, and 3.3V. This project uses the 3.3V version. It has all the necessary characteristics for this project:&lt;/p>
&lt;ul>
&lt;li>Output voltage accuracy: ±1.5%&lt;/li>
&lt;li>Output current: 600 mA (minimum)&lt;/li>
&lt;li>Foldback short-circuit protection: 50 mA&lt;/li>
&lt;li>Enable function for VOUT enable/disable&lt;/li>
&lt;li>Low dropout voltage (3.3V): 250 mV (typ.) @IOUT = 600 mA&lt;/li>
&lt;li>Excellent load regulation: 0.2%/A (typ.)&lt;/li>
&lt;li>Excellent line regulation: 0.02%/V (typ.)&lt;/li>
&lt;li>Low quiescent current: 55µA (typ.)&lt;/li>
&lt;li>Low standby current: 0.01 µA (typ.)&lt;/li>
&lt;li>Low output noise: 50µVRMS&lt;/li>
&lt;li>PSRR: 100 Hz -65 dB, 1 kHz -65 dB&lt;/li>
&lt;li>OTSD protection&lt;/li>
&lt;li>Stable with a flexible capacitor of 1.0 µF: ceramic, tantalum, and aluminum electrolytic&lt;/li>
&lt;li>Operating temperature range: -40°C to +85°C&lt;/li>
&lt;/ul>
&lt;figure style="float:left; width: 350px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/ap2112-datasheet.png" width="350" float="left">
&lt;/figure>
&lt;p>Additionally, it is extremely simple to implement. The provided datasheet contains all the necessary peripheral components required for its proper operation. Two smoothing capacitors with a value of 1uF on the input and output voltage and a 100K ohm resistor to allow constant ignition are sufficient.&lt;/p>
&lt;h4 id="adxl335">ADXL335
&lt;/h4>&lt;p>The heart of the project, the Analog Devices ADXL335 accelerometer, has a vibration sensitivity of 3g. Available only in &lt;strong>LFCSP-16&lt;/strong> format, it is relatively easy to implement as well, partly due to its small size (4mm x 4mm).&lt;/p>
&lt;p>This component has three analog outputs, each responsible for providing acceleration information along one of the three dimensions. A specific function is available on these analog outputs, described in the technical documentation. A 32K ohm resistor is placed on each of them. These resistors, via the addition of a capacitor, allow the creation of a low-pass filter, thus reducing noise on the data and the effect of aliasing from oversampling. The recommended minimum value for these capacitors is 4.7nF according to the technical documentation.&lt;/p>
&lt;p>It is also interesting to note from this documentation that the maximum useful frequency of each axis is different: 1600Hz for X and Y, and only 500Hz for Z.&lt;/p>
&lt;p>The positioning of this component is therefore extremely important depending on its usage.&lt;/p>
&lt;h3 id="components-list">Components List
&lt;/h3>&lt;p>Although they are the most important, other components are still present on this board:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Designation&lt;/th>
&lt;th>Reference&lt;/th>
&lt;th>Quantity&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Datasheet&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ADXL335&lt;/td>
&lt;td>U1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>LFCSP-16&lt;/td>
&lt;td>&lt;a class="link" href="datasheet-adxl-335.pdf" >ADXL335&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AP2112K-3.3&lt;/td>
&lt;td>U2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>SOT-23-5&lt;/td>
&lt;td>&lt;a class="link" href="datasheet-ap2112.pdf" >AP2112&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMD Resistor 100k ohm&lt;/td>
&lt;td>R2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMD Resistor 160 ohm&lt;/td>
&lt;td>R1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LED&lt;/td>
&lt;td>D1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMD Capacitor 1uF&lt;/td>
&lt;td>C4,C5&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMD Capacitor 4.7nF&lt;/td>
&lt;td>C1-C3&lt;/td>
&lt;td>3&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Power Connector&lt;/td>
&lt;td>J1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>JST PH B2B&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Signal Connector&lt;/td>
&lt;td>J2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>JST PH B3B&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="schematic-and-electronic-board">Schematic and Electronic Board
&lt;/h3>&lt;p>All design and manufacturing files are available in this GitHub repository: &lt;a class="link" href="" >ADXL-335&lt;/a>. However, here is a quick description of the different sections of this printed circuit board:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/kicad-pcb.png"
width="883"
height="507"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/kicad-pcb_hu_be3a08db3be13066.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/kicad-pcb_hu_75fb8db5f1f941a2.png 1024w"
loading="lazy"
alt="Electronic Board"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="417px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/kicad-schematic.jpg"
width="1520"
height="366"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/kicad-schematic_hu_7fe131946181c4e9.jpg 480w, https://albanpetit.com/post/adxl-335-accelerometer/kicad-schematic_hu_37498f68d3fe0e55.jpg 1024w"
loading="lazy"
alt="Schematic"
class="gallery-image"
data-flex-grow="415"
data-flex-basis="996px"
>&lt;/p>
&lt;ol>
&lt;li>A simple LED responsible for displaying the power status of the electronic board, accompanied by its resistor to prevent any smoke emission.&lt;/li>
&lt;li>The power stage of the electronic board, based on the AP2112K-3.3, has three smoothing capacitors to ensure its proper function. This information is available directly within the component datasheet.&lt;/li>
&lt;li>The MEMS accelerometer ADXL335, with its three capacitors, one for each analog output of this component. They filter out high frequencies, thus reducing noise and aliasing as mentioned earlier.&lt;/li>
&lt;li>The JST-PH connector with three pins, one for each analog output.&lt;/li>
&lt;li>The power supply JST-PH connector for 5 volts.&lt;/li>
&lt;/ol>
&lt;h2 id="electronic-board-manufacturing">Electronic Board Manufacturing
&lt;/h2>&lt;figure style="float:left; width: 100px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/aisler.png" width="100" float="left">
&lt;/figure>
&lt;p>Living in France, the usual (Chinese) suppliers of electronic boards can be relatively expensive due to shipping costs. I mainly order my boards from Aisler, a German board manufacturer. Always efficient, well-documented, and affordable, they have always perfectly fulfilled my orders. They even have a plugin available on KiCad to facilitate ordering, &lt;a class="link" href="https://github.com/AislerHQ/PushForKiCad" target="_blank" rel="noopener"
>Aisler push for KiCad&lt;/a>. A simple press on the icon and the project is directly transmitted to the website to place the order.&lt;/p>
&lt;p>Aisler offers PCBs with &lt;strong>ENIG&lt;/strong> (Electroless Nickel Immersion Gold) treatment, as well as the possibility of having stencils made for solder paste.&lt;/p>
&lt;p>Using a stencil provides solutions for soldering PCBs much more precisely than conventional methods with a soldering iron. The idea is to have a stencil made for each electronic circuit, allowing solder paste to be deposited on the surfaces that will later receive solder. Subsequently, electronic components are placed in their final positions. Once all the components are placed, a hotplate or reflow oven can be used to melt the solder paste, resulting in perfectly homogeneous solder joints.&lt;/p>
&lt;p>GreatScott explains and presents this method in one of his videos:
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/QarizoUnRfk"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;p>Here are some photos of different stages of this realization:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/pcb-1.png"
width="640"
height="480"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/pcb-1_hu_3d51e9bdde812512.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/pcb-1_hu_bb22f19233c51624.png 1024w"
loading="lazy"
alt="PCB 1"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/pcb-2.png"
width="640"
height="480"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/pcb-2_hu_4dd64b83943a01ca.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/pcb-2_hu_de76b760144a64fd.png 1024w"
loading="lazy"
alt="PCB 2"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/pcb-3.png"
width="640"
height="480"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/pcb-3_hu_9dc73677431e3ccc.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/pcb-3_hu_370e519ca159b863.png 1024w"
loading="lazy"
alt="PCB 3"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h2 id="implementation">Implementation
&lt;/h2>&lt;h3 id="initial-tests">Initial Tests
&lt;/h3>&lt;p>Once the electronic board is operational, I performed some tests with an oscilloscope to avoid trying to interface a malfunctioning electronic board with a microcontroller for hours. Accompanied by one of my favorite tools, the Sensepeek measurement probes, the results seem perfectly consistent with the datasheet of the ADXL335.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/implementation-1.jpeg"
width="3024"
height="4032"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/implementation-1_hu_2769480f1fc16fe3.jpeg 480w, https://albanpetit.com/post/adxl-335-accelerometer/implementation-1_hu_12c0b038af4364a3.jpeg 1024w"
loading="lazy"
alt="Sensepeek"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/implementation-2.jpeg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/implementation-2_hu_a2b848e85745e2cb.jpeg 480w, https://albanpetit.com/post/adxl-335-accelerometer/implementation-2_hu_76573e8f385b7283.jpeg 1024w"
loading="lazy"
alt="Oscilloscope"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/implementation-3.jpeg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/implementation-3_hu_22ac074f0ab8cf0f.jpeg 480w, https://albanpetit.com/post/adxl-335-accelerometer/implementation-3_hu_960074c720c0370f.jpeg 1024w"
loading="lazy"
alt="Test"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h3 id="raspberry-pi-pico">Raspberry Pi Pico
&lt;/h3>&lt;figure style="float:left; width: 180px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico.png" width="180" float="left">
&lt;/figure>
&lt;p>The Raspberry Pi Pico is an electronic board hosting the RP2040, an ARM architecture microcontroller designed by the Raspberry Pi Foundation. Announced in January 2021, the RP2040 is the first microcontroller developed by the foundation.&lt;/p>
&lt;p>This ARM architecture microcontroller has two cores clocked at 133 MHz, offering high performance. The Pico has 264 KB of SRAM and 2 MB of flash memory, providing sufficient storage space for programs and data. It is equipped with 26 digital I/O pins, three of which can be used as analog inputs. Additionally, it is equipped with two clock pins, two power pins, and many other pins for serial communication and bus interfaces.&lt;/p>
&lt;p>Therefore, I used this microcontroller to verify the proper functioning of the electronic board.&lt;/p>
&lt;h3 id="connection">Connection
&lt;/h3>&lt;p>The electronic setup is relatively simple, the daughter electronic board must be powered by the &lt;strong>+&lt;/strong> and &lt;strong>-&lt;/strong> interfaces, the Raspberry Pico has interfaces &lt;strong>40&lt;/strong> and &lt;strong>38&lt;/strong> for this purpose.
Then the &lt;strong>X&lt;/strong>, &lt;strong>Y&lt;/strong>, and &lt;strong>Z&lt;/strong> outputs of our board must be respectively connected to interfaces &lt;strong>31&lt;/strong>, &lt;strong>32&lt;/strong>, and &lt;strong>34&lt;/strong> of the &lt;strong>Pico&lt;/strong>.&lt;/p>
&lt;p>The diagram below is of great help to quickly identify the connection interfaces in question:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico-pinout.png"
width="842"
height="595"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico-pinout_hu_6526a6011e53b6a9.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico-pinout_hu_9d7edec870f38018.png 1024w"
loading="lazy"
alt="Raspberry Pi Pico Pinout"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h4 id="arduino-code">Arduino Code
&lt;/h4>&lt;p>First and foremost, the &lt;strong>Pico&lt;/strong> is not naturally available for use in the &lt;strong>Arduino&lt;/strong> software, an installation is required. To do this, you need to add this URL: &lt;code>https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json&lt;/code> within the &lt;code>Additional Board Manager URLs&lt;/code> option in the preferences panel of &lt;strong>Arduino&lt;/strong>: &lt;em>File &amp;gt; Preferences&lt;/em> like this:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-1.png"
width="744"
height="490"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-1_hu_aa6798e6ad40374f.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-1_hu_1bf9491dd38d8e58.png 1024w"
loading="lazy"
alt="Arduino Settings"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
>&lt;/p>
&lt;p>Then the board manager will help us install the now referenced board:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-2.png"
width="805"
height="631"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-2_hu_e5079a7662c04d1b.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-2_hu_825dc11898ed12ba.png 1024w"
loading="lazy"
alt="Arduino Board Manager"
class="gallery-image"
data-flex-grow="127"
data-flex-basis="306px"
>&lt;/p>
&lt;p>Then all you have to do is create an &lt;strong>Arduino&lt;/strong> script that reads the voltage values ​​from the analog interfaces &lt;strong>31&lt;/strong>, &lt;strong>32&lt;/strong>, and &lt;strong>34&lt;/strong> of the &lt;strong>Pico&lt;/strong>. Here is an example of a functional script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Arduino" data-lang="Arduino">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">xInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">yInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">27&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">zInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">28&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// initialize minimum and maximum Raw Ranges for each axis
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">RawMin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">RawMax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1023&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Take multiple samples to reduce noise
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">sampleSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">setup&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9600&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Read raw values
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">xRaw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xInput&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">yRaw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yInput&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">zRaw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zInput&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Convert raw values to &amp;#39;milli-Gs&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">xScaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xRaw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">yScaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yRaw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">zScaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zRaw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// re-scale to fractional Gs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">float&lt;/span> &lt;span class="n">xAccel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">xScaled&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">float&lt;/span> &lt;span class="n">yAccel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">yScaled&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">float&lt;/span> &lt;span class="n">zAccel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">zScaled&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="s">&amp;#34;);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xRaw&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yRaw&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zRaw&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; :: &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xAccel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;G, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yAccel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;G, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zAccel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;G&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Take samples and return the average
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">axisPin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">reading&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">analogRead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">axisPin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">sampleSize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reading&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nf">analogRead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">axisPin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">reading&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sampleSize&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The serial interface should normally return values ​​like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Arduino" data-lang="Arduino">&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">532&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">626&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">576&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">533&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">626&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">626&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>This project allowed me to explore the design and fabrication of a board integrating a MEMS sensor. The soldering phase using a stencil was an enriching experience, providing a professional-quality finish. This board will be useful for more advanced applications, and I already have some ideas for the future!&lt;/p>
&lt;p>If you’d like to access the design files, they are available on my &lt;a class="link" href="https://github.com/albanpetit" target="_blank" rel="noopener"
>GitHub repository&lt;/a>. Feel free to share your feedback and similar experiences!&lt;/p></description></item></channel></rss>