<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PCB on Alban Petit</title><link>https://albanpetit.com/fr/tags/pcb/</link><description>Recent content in PCB on Alban Petit</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Wed, 12 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://albanpetit.com/fr/tags/pcb/index.xml" rel="self" type="application/rss+xml"/><item><title>Accéléromètre ADXL335</title><link>https://albanpetit.com/fr/post/adxl-335-accelerometer/</link><pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate><guid>https://albanpetit.com/fr/post/adxl-335-accelerometer/</guid><description>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/main.jpg" alt="Featured image of post Accéléromètre ADXL335" />&lt;p>Dans cet article, je vous emmène au cœur de mon dernier projet : un PCB personnalisé conçu autour d’un accéléromètre MEMS. Ce projet, bien que relativement simple dans son application, met en avant un composant électronique fascinant, aussi bien par son fonctionnement interne que par ses applications. Cette carte électronique me servira plus tard dans d’autres expérimentations et projets.&lt;/p>
&lt;h2 id="accéléromètres-mems">Accéléromètres MEMS
&lt;/h2>&lt;figure style="float:left; width: 160px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/mems.jpg" width="160" float="left">
&lt;/figure>
&lt;p>Les accéléromètres MEMS sont des dispositifs compacts qui exploitent la microfabrication pour intégrer des éléments mécaniques, des capteurs et des actionneurs sur une minuscule puce en silicium. Au cœur de ces dispositifs, on trouve une structure MEMS composée de microstructures telles que des poutres ou des porte-à-faux qui réagissent aux forces externes.&lt;/p>
&lt;h3 id="principe-de-fonctionnement">Principe de fonctionnement
&lt;/h3>&lt;p>Le principe repose sur l’inertie : un objet au repos tend à rester immobile, tandis qu’un objet en mouvement continue dans sa trajectoire sauf s’il est soumis à une force externe. L’accéléromètre MEMS utilise ce concept pour mesurer l’accélération.&lt;/p>
&lt;figure style="float:left; width: 215px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/mems-2.jpg" width="215" float="left">
&lt;/figure>
&lt;p>À l’intérieur de la structure, une masse suspendue par des poutres flexibles se déplace en réponse aux accélérations. Cette déviation mécanique est ensuite convertie en signal électrique par un capteur capacitif ou piézoélectrique intégré.&lt;/p>
&lt;h3 id="traduire-le-mouvement-mécanique-en-signaux-électriques">Traduire le mouvement mécanique en signaux électriques
&lt;/h3>&lt;p>Lorsqu’une accélération est appliquée, la masse bouge, ce qui entraîne une variation de capacité ou génère une tension proportionnelle à la force appliquée. Ce signal est ensuite traité pour fournir une donnée exploitable sur l’accélération subie par l’appareil.&lt;/p>
&lt;h2 id="conception-de-la-carte-électronique">Conception de la carte électronique
&lt;/h2>&lt;p>Ce PCB est compact et simple à intégrer dans différents projets. Il comprend un régulateur de tension AP2112 pour assurer une alimentation stable de 3,3V, permettant une compatibilité avec des dispositifs fonctionnant sous 5V, comme les cartes Arduino. Ses dimensions sont de 19mm x 24mm, et il comporte deux connecteurs :&lt;/p>
&lt;ul>
&lt;li>Un pour l’alimentation en 5V&lt;/li>
&lt;li>Un autre pour la sortie des données analogiques de l’accélération sur les axes X, Y et Z&lt;/li>
&lt;/ul>
&lt;h3 id="composants-principaux">Composants principaux
&lt;/h3>&lt;p>Sur cette carte électronique, il y a deux composants majeurs : le régulateur et l&amp;rsquo;accéléromètre.&lt;/p>
&lt;h4 id="ap2112k-33">AP2112K-3.3
&lt;/h4>&lt;p>Ce régulateur linéaire en package &lt;strong>SOT-23-5&lt;/strong> est extrêmement courant, utilisé dans de nombreuses cartes électroniques à destination des hobbyistes. Il revient dans beaucoup de designs de chez &lt;strong>Adafruit&lt;/strong> ou encore &lt;strong>Sparkfun&lt;/strong>. C&amp;rsquo;est un régulateur linéaire à faible abaissement proposant une tension fixe, disponible dans de multiples variantes : 1.2V, 1.8V, 2.5V, 2.6V, et 3.3V. Ce projet utilise la version 3.3V. Il dispose de toutes les caractéristiques nécessaires pour ce projet :&lt;/p>
&lt;ul>
&lt;li>Précision de la tension de sortie : ±1,5%&lt;/li>
&lt;li>Courant de sortie : 600 mA (minimum)&lt;/li>
&lt;li>Protection contre les courts-circuits repliables : 50 mA&lt;/li>
&lt;li>Activer la fonction pour activer/désactiver VOUT&lt;/li>
&lt;li>Faible tension de chute (3,3 V) : 250 mV (typ.) @IOUT = 600 mA&lt;/li>
&lt;li>Excellente régulation de charge : 0,2%/A (typ.)&lt;/li>
&lt;li>Excellente régulation de ligne : 0,02%/V (typ.)&lt;/li>
&lt;li>Faible courant de repos : 55µA (typ.)&lt;/li>
&lt;li>Faible courant de veille : 0,01 µA (typ.)&lt;/li>
&lt;li>Faible bruit de sortie : 50µVRMS&lt;/li>
&lt;li>PSRR : 100 Hz -65 dB, 1 kHz -65 dB&lt;/li>
&lt;li>Protection OTSD&lt;/li>
&lt;li>Stable avec un condensateur flexible de 1,0 µF : céramique, tantale et électrolytique à l&amp;rsquo;aluminium&lt;/li>
&lt;li>Plage de température de fonctionnement : -40°C à +85°C&lt;/li>
&lt;/ul>
&lt;figure style="float:left; width: 350px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/ap2112-datasheet.png" width="350" float="left">
&lt;/figure>
&lt;p>En prime, il est simple de mise en oeuvre. Le document de données techniques fourni par le fabricant présente l&amp;rsquo;ensemble des composants satellites nécessaires à son bon fonctionnement. Il suffira de deux condensateurs de lissage d&amp;rsquo;une valeur de 1uF sur l&amp;rsquo;entrée et sur la sortie en tension, et d&amp;rsquo;une résistance de 100K ohms pour permettre un allumage constant.&lt;/p>
&lt;h4 id="adxl335">ADXL335
&lt;/h4>&lt;p>Le cœur du projet, l&amp;rsquo;accéléromètre &lt;strong>ADXL335&lt;/strong> de la marque &lt;strong>Analog Devices&lt;/strong>, dispose d&amp;rsquo;une sensibilité à la vibration de 3G. Disponible uniquement en format &lt;strong>LFCSP-16&lt;/strong>, il présente également des dimensions réduites (4mm x 4mm).&lt;/p>
&lt;p>Ce composant dispose de trois sorties analogiques, chacune responsable de fournir l&amp;rsquo;information d&amp;rsquo;accélération d&amp;rsquo;une des trois dimensions. Une fonction particulière est disponible sur ces sorties analogiques, décrite dans la documentation technique. Une résistance de 32K ohms est disposée sur chacune d&amp;rsquo;entre elles. Ces résistances permettent, via l&amp;rsquo;ajout d&amp;rsquo;un condensateur, de créer un filtre passe-bas, réduisant ainsi le bruit sur les données et l&amp;rsquo;effet de crénelage d&amp;rsquo;un suréchantillonnage. La valeur minimale conseillée de ces condensateurs est de 4,7nF.&lt;/p>
&lt;p>Il est également intéressant de relever de cette documentation que la fréquence utile maximale de chaque axe est différente : 1600Hz pour X et Y, et seulement 500Hz pour Z.&lt;/p>
&lt;p>Le positionnement de ce composant doit être ainsi judicieusement choisi en fonction de l&amp;rsquo;usage.&lt;/p>
&lt;h3 id="liste-des-composants">Liste des composants
&lt;/h3>&lt;p>Ces deux composants sont les plus importants, mais ils ne permettent pas à eux seuls de faire fonctionner cette carte, certains composants périphériques sont également nécessaires :&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Désignation&lt;/th>
&lt;th>Référence&lt;/th>
&lt;th>Quantité&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Fiche technique&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ADXL335&lt;/td>
&lt;td>U1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>LFCSP-16&lt;/td>
&lt;td>&lt;a class="link" href="datasheet-adxl-335.pdf" >ADXL335&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AP2112K-3.3&lt;/td>
&lt;td>U2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>SOT-23-5&lt;/td>
&lt;td>&lt;a class="link" href="datasheet-ap2112.pdf" >AP2112&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Résistance SMD 100k ohm&lt;/td>
&lt;td>R2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Résistance SMD 160 ohm&lt;/td>
&lt;td>R1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LED&lt;/td>
&lt;td>D1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Condensateur SMD 1uF&lt;/td>
&lt;td>C4,C5&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Condensateur SMD 4,7nF&lt;/td>
&lt;td>C1-C3&lt;/td>
&lt;td>3&lt;/td>
&lt;td>0603&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connecteur d&amp;rsquo;alimentation&lt;/td>
&lt;td>J1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>JST PH B2B&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connecteur de signal&lt;/td>
&lt;td>J2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>JST PH B3B&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="schéma-et-carte-électronique">Schéma et carte électronique
&lt;/h3>&lt;p>L&amp;rsquo;ensemble des fichiers de conception et de fabrication sont disponibles dans ce répertoire &lt;strong>GitHub&lt;/strong> : &lt;a class="link" href="" >ADXL-335&lt;/a>. Voici tout de même un rapide descriptif des différentes sections de ce circuit imprimé :&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/kicad-pcb.png"
width="883"
height="507"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/kicad-pcb_hu_be3a08db3be13066.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/kicad-pcb_hu_75fb8db5f1f941a2.png 1024w"
loading="lazy"
alt="Carte électronique"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="417px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/kicad-schematic.jpg"
width="1520"
height="366"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/kicad-schematic_hu_7fe131946181c4e9.jpg 480w, https://albanpetit.com/post/adxl-335-accelerometer/kicad-schematic_hu_37498f68d3fe0e55.jpg 1024w"
loading="lazy"
alt="Schéma électronique"
class="gallery-image"
data-flex-grow="415"
data-flex-basis="996px"
>&lt;/p>
&lt;ol>
&lt;li>Une LED discrète responsable d&amp;rsquo;afficher l&amp;rsquo;état d&amp;rsquo;alimentation de la carte électronique, accompagnée de sa résistance pour éviter toute émission de fumée.&lt;/li>
&lt;li>L&amp;rsquo;étage d&amp;rsquo;alimentation de la carte électronique, basé sur l&amp;rsquo;AP2112K-3.3, avec ses trois condensateurs de lissage.&lt;/li>
&lt;li>L&amp;rsquo;accéléromètre MEMS ADXL335, avec ces trois condensateurs, un pour chaque sortie analogique.&lt;/li>
&lt;li>Le connecteur JST-PH avec trois broches, une pour chaque sortie analogique.&lt;/li>
&lt;li>Le connecteur JST-PH d&amp;rsquo;alimentation en 5 volts.&lt;/li>
&lt;/ol>
&lt;h2 id="fabrication-de-la-carte-électronique">Fabrication de la carte électronique
&lt;/h2>&lt;figure style="float:left; width: 100px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/aisler.png" width="100" float="left">
&lt;/figure>
&lt;p>Habitant en France, les fournisseurs habituels (chinois) de cartes électroniques peuvent être relativement onéreux à cause des frais de port. Je me fournis principalement chez &lt;strong>Aisler&lt;/strong>, un fabricant allemand. Efficace, abordable et bien documenté, ils ont toujours honoré mes commandes. Ils ont même un plugin disponible sur &lt;strong>Kicad&lt;/strong> pour faciliter la commande, &lt;a class="link" href="https://github.com/AislerHQ/PushForKiCad" target="_blank" rel="noopener"
>Aisler push for Kicad&lt;/a>. En un clic le projet est directement transmis au site pour effectuer ladite commande.&lt;/p>
&lt;p>&lt;strong>Aisler&lt;/strong> propose des PCB avec un traitement &lt;strong>ENIG&lt;/strong> (Electroless Nickel Immersion Gold), ainsi que la possibilité de faire fabriquer des &lt;strong>stencils&lt;/strong> pour faciliter l&amp;rsquo;application de la crème à braser.&lt;/p>
&lt;p>L&amp;rsquo;utilisation d&amp;rsquo;un &lt;strong>stencil&lt;/strong> donne accès à des solutions pour souder des &lt;strong>PCB&lt;/strong> bien plus précisément que les méthodes conventionnelles avec un fer à souder. L&amp;rsquo;idée est de faire fabriquer pour chaque circuit électronique un pochoir qui permet de déposer de la crème à braser sur les surfaces accueillant plus tard de l&amp;rsquo;étain. Par la suite, il s&amp;rsquo;agira de déposer les composants électroniques à leurs positions finales. Une fois l&amp;rsquo;ensemble des composants placés, une plaque chauffante ou un four à refusion peut être utilisé pour faire fondre la crème à braser et donc réaliser la soudure, il en résulte des points de soudure parfaitement homogènes.&lt;/p>
&lt;p>&lt;strong>GreatScott&lt;/strong> explique et présente cette méthode dans une de ses vidéos :&lt;/p>
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/QarizoUnRfk"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;p>Voici tout de même quelques photos de différentes étapes de cette réalisation :&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/pcb-1.png"
width="640"
height="480"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/pcb-1_hu_3d51e9bdde812512.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/pcb-1_hu_bb22f19233c51624.png 1024w"
loading="lazy"
alt="PCB 1"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/pcb-2.png"
width="640"
height="480"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/pcb-2_hu_4dd64b83943a01ca.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/pcb-2_hu_de76b760144a64fd.png 1024w"
loading="lazy"
alt="PCB 2"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/pcb-3.png"
width="640"
height="480"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/pcb-3_hu_9dc73677431e3ccc.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/pcb-3_hu_370e519ca159b863.png 1024w"
loading="lazy"
alt="PCB 3"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h2 id="mise-en-œuvre">Mise en œuvre
&lt;/h2>&lt;h3 id="tests-initiaux">Tests initiaux
&lt;/h3>&lt;p>Une fois la carte électronique en état de fonctionnement, j&amp;rsquo;ai effectué quelques tests avec un oscilloscope, pour éviter d&amp;rsquo;essayer d&amp;rsquo;interfacer une carte électronique dysfonctionnelle avec un microcontrôleur pendant des heures. Accompagné d&amp;rsquo;un de mes outils préférés, les sondes de mesure &lt;strong>Sensepeek&lt;/strong>, les résultats semblent parfaitement cohérents avec la fiche technique de l&amp;rsquo;&lt;strong>ADXL335&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/implementation-1.jpeg"
width="3024"
height="4032"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/implementation-1_hu_2769480f1fc16fe3.jpeg 480w, https://albanpetit.com/post/adxl-335-accelerometer/implementation-1_hu_12c0b038af4364a3.jpeg 1024w"
loading="lazy"
alt="Sensepeek"
class="gallery-image"
data-flex-grow="75"
data-flex-basis="180px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/implementation-2.jpeg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/implementation-2_hu_a2b848e85745e2cb.jpeg 480w, https://albanpetit.com/post/adxl-335-accelerometer/implementation-2_hu_76573e8f385b7283.jpeg 1024w"
loading="lazy"
alt="Oscilloscope"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/implementation-3.jpeg"
width="4032"
height="3024"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/implementation-3_hu_22ac074f0ab8cf0f.jpeg 480w, https://albanpetit.com/post/adxl-335-accelerometer/implementation-3_hu_960074c720c0370f.jpeg 1024w"
loading="lazy"
alt="Test"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h3 id="raspberry-pi-pico">Raspberry Pi Pico
&lt;/h3>&lt;figure style="float:left; width: 180px; margin: 10px 30px 0px 0px">&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico.png" width="180" float="left">
&lt;/figure>
&lt;p>Le Raspberry Pi Pico est une carte électronique accueillant le RP2040, un microcontrôleur d&amp;rsquo;architecture ARM conçu par la fondation Raspberry Pi. Annoncé en janvier 2021, c&amp;rsquo;est le premier microcontrôleur développé par la fondation.&lt;/p>
&lt;p>Ce microcontrôleur, d&amp;rsquo;architecture ARM, dispose de deux cœurs de 133 MHz, offrant des performances élevées. Le Pico dispose de 264 Ko de mémoire SRAM et de 2 Mo de mémoire flash, offrant suffisamment d&amp;rsquo;espace de stockage pour des programmes complexes et des données. Il est équipé de 26 broches d&amp;rsquo;E/S numériques, dont 3 peuvent être utilisées comme entrées analogiques. De plus, il est équipé de deux broches d&amp;rsquo;horloge, deux broches d&amp;rsquo;alimentation et de nombreuses autres broches pour les communications série et les interfaces de bus.&lt;/p>
&lt;p>C&amp;rsquo;est donc ce microcontrôleur que j&amp;rsquo;ai utilisé pour vérifier le bon fonctionnement de la carte électronique.&lt;/p>
&lt;h3 id="branchement">Branchement
&lt;/h3>&lt;p>Le montage électronique peut être effectué, en alimentant la carte électronique fille par l&amp;rsquo;interface &lt;strong>+&lt;/strong> et &lt;strong>-&lt;/strong>, le &lt;strong>Raspberry Pico&lt;/strong> dispose pour cela des interfaces &lt;strong>40&lt;/strong> et &lt;strong>38&lt;/strong>.
Ensuite les sorties &lt;strong>X&lt;/strong>, &lt;strong>Y&lt;/strong> et &lt;strong>Z&lt;/strong> de notre carte doivent être respectivement branchées aux interfaces &lt;strong>31&lt;/strong>, &lt;strong>32&lt;/strong> et &lt;strong>34&lt;/strong> du &lt;strong>Pico&lt;/strong>.&lt;/p>
&lt;p>Le schéma ci-dessous est d&amp;rsquo;une grande aide pour rapidement identifier les interfaces de connexion en question :&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico-pinout.png"
width="842"
height="595"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico-pinout_hu_6526a6011e53b6a9.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/raspberry-pico-pinout_hu_9d7edec870f38018.png 1024w"
loading="lazy"
alt="Brochage Raspberry Pi Pico"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h4 id="code-arduino">Code Arduino
&lt;/h4>&lt;p>Avant toute chose, le &lt;strong>Pico&lt;/strong> n&amp;rsquo;est pas naturellement disponible à l&amp;rsquo;usage dans le logiciel &lt;strong>Arduino&lt;/strong>, une installation est nécessaire. Pour cela, il faut ajouter cette URL : &lt;code>https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json&lt;/code> au sein de l&amp;rsquo;option &lt;code>Gestionnaire de carte supplémentaires&lt;/code> présente dans le panneau de préférences d&amp;rsquo;&lt;strong>Arduino&lt;/strong> : &lt;em>Fichier &amp;gt; Préférences&lt;/em> tel que cela :&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-1.png"
width="744"
height="490"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-1_hu_aa6798e6ad40374f.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-1_hu_1bf9491dd38d8e58.png 1024w"
loading="lazy"
alt="Paramètres Arduino"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
>&lt;/p>
&lt;p>Ensuite le gestionnaire de carte va nous aider à installer la carte maintenant référencée :&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-2.png"
width="805"
height="631"
srcset="https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-2_hu_e5079a7662c04d1b.png 480w, https://albanpetit.com/post/adxl-335-accelerometer/arduino-settings-2_hu_825dc11898ed12ba.png 1024w"
loading="lazy"
alt="Gestionnaire de carte Arduino"
class="gallery-image"
data-flex-grow="127"
data-flex-basis="306px"
>&lt;/p>
&lt;p>Ensuite il s&amp;rsquo;agira de créer un script &lt;strong>Arduino&lt;/strong> qui relève les valeurs de tension des interfaces analogiques &lt;strong>31&lt;/strong>, &lt;strong>32&lt;/strong> et &lt;strong>34&lt;/strong> du &lt;strong>Pico&lt;/strong>. Voici un exemple de script fonctionnel :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Arduino" data-lang="Arduino">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">xInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">yInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">27&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">zInput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">28&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// initialize minimum and maximum Raw Ranges for each axis
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">RawMin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">RawMax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1023&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Take multiple samples to reduce noise
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">sampleSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">setup&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9600&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//Read raw values
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">xRaw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xInput&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">yRaw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yInput&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">zRaw&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zInput&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Convert raw values to &amp;#39;milli-Gs&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">xScaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xRaw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">yScaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yRaw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">zScaled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zRaw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RawMax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// re-scale to fractional Gs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">float&lt;/span> &lt;span class="n">xAccel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">xScaled&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">float&lt;/span> &lt;span class="n">yAccel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">yScaled&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">float&lt;/span> &lt;span class="n">zAccel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">zScaled&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;X, Y, Z :: &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xRaw&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yRaw&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zRaw&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; :: &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xAccel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;G, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yAccel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;G, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zAccel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nc">Serial&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;G&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Take samples and return the average
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">ReadAxis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">axisPin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">reading&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">analogRead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">axisPin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">delay&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">sampleSize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reading&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nf">analogRead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">axisPin&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">reading&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sampleSize&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;interface série doit normalement retourner ce genre de valeur :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Arduino" data-lang="Arduino">&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">532&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">626&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">530&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">625&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">576&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">627&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">533&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">577&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">626&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">X&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Z&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">531&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">578&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">626&lt;/span> &lt;span class="o">::&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="n">G&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="n">G&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="conclusion">Conclusion
&lt;/h1>&lt;p>Ce projet m’a permis d’explorer la conception et la fabrication d’une carte intégrant un capteur MEMS. La phase de soudure avec un stencil a été une expérience enrichissante, permettant d’obtenir une qualité de finition professionnelle. Cette carte me servira dans des applications plus avancées, et j’ai déjà quelques idées pour la suite !&lt;/p>
&lt;p>Si vous souhaitez récupérer les fichiers de conception, ils sont disponibles sur mon &lt;a class="link" href="https://github.com/albanpetit" target="_blank" rel="noopener"
>dépôt GitHub&lt;/a>. N’hésitez pas à me faire part de vos retours et expériences similaires !&lt;/p></description></item></channel></rss>