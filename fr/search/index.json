[{"content":"Dans cet article, nous plongeons au cœur de mon dernier projet un PCB personnalisé conçu autour d\u0026rsquo;un accéléromètre MEMS. Ce projet est relativement simple dans son application, mails il utilise un composant électronique extrêmement interessant par son fonctionnement interne, un accerometre MEMS. Cette carte électronique sera utilise plus tard au sein d\u0026rsquo;autres projets.\nAccéléromètres MEMS Les accéléromètres MEMS sont des dispositifs compacts qui exploitent la technologie de microfabrication pour intégrer des éléments mécaniques, des capteurs, des actionneurs et de l\u0026rsquo;électronique sur une minuscule puce en silicium. Au cœur de ces dispositifs se trouve une structure MEMS, souvent composée de microstructures telles que des poutres ou des porte-à-faux, qui répondent aux forces externes.\nPrincipe de fonctionnement Le principe de fonctionnement des accéléromètres MEMS repose sur le concept d\u0026rsquo;inertie. Selon la deuxième loi du mouvement de Newton, un objet au repos a tendance à rester au repos, et un objet en mouvement a tendance à rester en mouvement sauf s\u0026rsquo;il est soumis à une force externe. Les accéléromètres MEMS capitalisent sur ce principe pour mesurer l\u0026rsquo;accélération.\nAu sein de la structure MEMS, il existe généralement une masse suspendue par des poutres flexibles. Lorsque le dispositif subit une accélération, la masse résiste à ce changement en raison de l\u0026rsquo;inertie, provoquant une déviation dans les poutres. Cette déviation est ensuite convertie en un signal électrique par un capteur, tel qu\u0026rsquo;un capteur capacitif ou piézoélectrique, intégré dans la structure MEMS.\nTraduire le mouvement mécanique en signaux électriques Au fur et à mesure que l\u0026rsquo;accéléromètre rencontre une accélération, le mouvement de la masse induit une variation de capacité ou génère une tension proportionnelle à la force appliquée. Ce signal électrique est ensuite traité et traduit en données significatives, nous permettant de quantifier l\u0026rsquo;accélération subie par le dispositif.\nCarte électronique Ce PCB est relativement simple, de petites dimensions il s\u0026rsquo;intègre sans aucun problèmes dans n\u0026rsquo;importe quel projet. La presence d\u0026rsquo;un régulateur de tension AP2112 permet la regulation de la tension d\u0026rsquo;entree a 3.3V et donc l\u0026rsquo;utilisation de cette carte électronique avec proposant du 5V comme tension par défaut, comme les Arduino par exemple. Elle présente ainsi des dimensions de 19mm x 24mm avec deux connecteurs, le premier pour l\u0026rsquo;alimentation en 5V, le second pour les données analogiques de l\u0026rsquo;acceleration sur les trois axes: x, y, z.\nComposants principaux Sur cette carte électronique, deux composants sont les plus importants, le régulateur et l\u0026rsquo;accéléromètre.\nAP2112K-3.3 Ce régulateur linéaire en package SOT-23-5 est extrêmement courant, utilisé dans de nombreuse cartes électroniques a destination des hobbyist il reviens dans de nombreux design des chez Adafruit ou encore Sparkfun. C\u0026rsquo;est un régulateur linéaire a faible abaissement a tension fixe, disponible dans de multiple variantes, 1.2V, 1.8V, 2.5V, 2.6V, et 3.3V, ce projet utilise la version 3.3V. Il dispose de toutes les caractéristiques nécessaire pour ce projet :\nPrécision de la tension de sortie : ±1,5 % Courant de sortie : 600 mA (min.) Protection contre les courts-circuits repliables : 50 mA Activer la fonction pour activer/désactiver VOUT Faible tension de chute (3,3 V) : 250 mV (Typ.) @IOUT = 600 mA Excellente régulation de charge : 0,2 %/A (Typ.) Excellente régulation de ligne : 0,02 %/V (Typ.) Faible courant de repos : 55µA (Typ.) Faible courant de veille : 0,01 µA (Typ.) Faible bruit de sortie : 50µVRMS PSRR : 100 Hz -65 dB, 1 kHz -65 dB Protection OTSD Stable avec un capuchon flexible de 1,0 µF : céramique, tantale et Électrolyse de l\u0026rsquo;aluminium Plage de température de fonctionnement : -40°C à +85°C En prime, il est extrêmement simple a mettre en oeuvre, le document de données techniques fournis avec nous présente l\u0026rsquo;ensemble des composants satellites nécessaire a sont bon fonctionnement. Il suffira de deux condensateurs de lissage d\u0026rsquo;une valeur de 1uF sur l\u0026rsquo;entree en tension ainsi que la sortie, ainsi que d\u0026rsquo;une resistance de 100K ohms pour permettre son allumage constant.\nADXL335 Le coeur du projet, l\u0026rsquo;accéléromètre ADXL335, ce composant de la marque Analog Devices dispose d\u0026rsquo;une sensibilité la vibration de 3g, disponible uniquement en format LFCSP-16 il est relativement simple a mettre en oeuvre également en partie grace a sa taille réduite (4mm x 4mm).\nCe composant dispose de trois sorties analogiques, chacune responsable de fournir l\u0026rsquo;information d\u0026rsquo;acceleration d\u0026rsquo;une des trois dimensions. Une fonction particulière est disponible sur ces sorties analogique, décrit dans la documentation technique, une resistance de 32K ohms est disposée sur chacune d\u0026rsquo;entres elles. Ces resistances permettent via l\u0026rsquo;ajout d\u0026rsquo;un condensateur de créer un filtre passe bas, réduisant ainsi le bruit sur les données et l\u0026rsquo;effet de crénelage d\u0026rsquo;un suréchantillonnage. La valeur minimal conseillée de ces condensateur est de 4,7nF selon la documentation technique.\nIl est également interessant de relever de cette documentation que la fréquence utile maximale de chaque axe est différente, 1600Hz pour X et Y et seulement 500Hz pour Z. Le positionnement de ce composant est donc extrêmement important en fonction de l\u0026rsquo;usage.\nListe des composants Bien qu\u0026rsquo;ils soient les plus composants les plus importants, d\u0026rsquo;autres composants sont tout de meme present sur cette carte :\nDenomination Reference Quantité Format Datasheet ADXL335 U1 1 LFCSP-16 ADXL335 AP2112K-3.3 U2 1 SOT-23-5 AP2112 100k ohm SMD resistor R2 1 0603 - 160 ohm SMD resistor R1 1 0603 - LED D1 1 0603 - 1uF SMD capacitor C4,C5 2 0603 - 4,7nF SMD capacitor C1-C3 3 0603 - Power connector J1 1 JST PH B2B - Signal connector J2 1 JST PH B3B - Schéma et carte électronique L\u0026rsquo;ensemble des fichiers de conception et de fabrication sont disponibles dans ce repertoire GitHub : ADXL-335. Voici tout de meme un rapide descriptif des différentes sections de ce circuit imprime :\nUne simple LED responsable d\u0026rsquo;afficher l\u0026rsquo;état d\u0026rsquo;alimentation de la carte électronique, accompagne de sa résistance pour éviter toute émission de fumer L\u0026rsquo;étage d\u0026rsquo;alimentation de la carte électronique, base sur l\u0026rsquo;AP2112K-3.3, il dispose de trois condensateurs de lissage pour assurer sa fonction correctement, ces informations sont disponibles directement au sein de la fiche technique du composant. L\u0026rsquo;accéléromètre MEMS ADXL335, avec ces trois condensateurs, un pour chaque sortie analogique de ce composant. Ils permettent de filtrer les hautes fréquences permettant donc une réduction de bruit et l\u0026rsquo;anti-crénelage comme indique plus tot. Le connecteur JST-PH avec trois broches, une pour chaque sortie analogique Le connecteur JST-PH d\u0026rsquo;alimentation en 5 volts ","date":"2024-03-02T00:00:00Z","image":"https://albanpetit.com/posts/adxl-335-accelerometer/main_hue0d2ad2fb5cdb079a180aa06af3f3262_325200_120x120_fill_q75_box_smart1.jpg","permalink":"https://albanpetit.com/fr/posts/adxl-335-accelerometer/","title":"Accéléromètre ADXL335"},{"content":"L\u0026rsquo;accès à distance à votre Raspberry Pi est essentiel pour simplifier la gestion sans avoir besoin d\u0026rsquo;un écran, d\u0026rsquo;un clavier et d\u0026rsquo;une souris. La configuration de l\u0026rsquo;accès SSH (Secure Shell) est une étape cruciale pour établir une connexion sécurisée avec votre Raspberry Pi.\nComme pour la configuration du wifi, vous pouvez configurer une partie des éléments importants du serveur SSH avant même le premier démarrage du Raspberry via l\u0026rsquo;utilitaire Raspberry Pi Imager.\nopenssh-server Avant de commencer, assurez-vous que votre Raspberry Pi est équipé d\u0026rsquo;un système d\u0026rsquo;exploitation compatible. Les systèmes couramment utilisés, tels que Raspbian, prennent en charge SSH dès l\u0026rsquo;installation. Assurez-vous également que votre Raspberry Pi est connecté à votre réseau local. Vous pouvez vérifier le bon fonctionnement du serveur SSH de votre Raspberry avec la commande suivante :\nsudo systemctl status sshd.service Si le serveur SSH fonctionne correctement, la réponse à cette commande doit ressembler à cela : Si la commande retourne une erreur comme : Unit sshd.service could not be found., il est nécessaire d\u0026rsquo;installer le serveur SSH. Pour cela, les commandes suivantes pourront vous aider :\nsudo apt update sudo apt upgrade sudo apt install openssh-server Activation du SSH La manière la plus simple d\u0026rsquo;activer le service SSH est d\u0026rsquo;utiliser l\u0026rsquo;outil raspi-config de la Raspberry Foundation. Pour ce faire, suivez ces étapes :\nOuvrez un terminal sur votre Raspberry Pi. Tapez la commande suivante pour ouvrir l\u0026rsquo;outil de configuration : sudo raspi-config Sélectionnez l\u0026rsquo;option Interface Options. Naviguez jusqu\u0026rsquo;à SSH et appuyez sur Enter. Choisissez Yes pour activer le service SSH. Appuyez sur Finish pour quitter l\u0026rsquo;outil de configuration. Pour la suite, vous devez connaître l\u0026rsquo;adresse IP du Raspberry sur votre réseau. Pour cela, vous pouvez utiliser l\u0026rsquo;interface de votre routeur réseau ou la commande suivante sur le Raspberry:\nhostname -I | awk \u0026#39;{print $1}\u0026#39; Connexion SSH depuis un autre appareil Une fois le service SSH activé, vous pouvez vous connecter à votre Raspberry Pi à partir d\u0026rsquo;un autre ordinateur sur le même réseau. Utilisez l\u0026rsquo;adresse IP de votre Raspberry Pi pour établir la connexion SSH. La commande standard est la suivante (remplacez adresse_ip par l\u0026rsquo;adresse réelle) :\nssh pi@adresse_ip Vous serez invité à entrer le mot de passe par défaut, qui est généralement raspberry pour l\u0026rsquo;utilisateur pi.\nChangement du mot de passe par défaut Il est fortement recommandé de changer le mot de passe par défaut de votre Raspberry Pi pour renforcer la sécurité. Utilisez la commande suivante pour changer le mot de passe de l\u0026rsquo;utilisateur pi :\npasswd Suivez les instructions pour définir un nouveau mot de passe robuste.\nConfiguration avancée Pour des mesures de sécurité, vous pouvez effectuer quelques modifications supplémentaires.\nUtilisation de clés SSH Utiliser une clé SSH sur votre Raspberry Pi est une excellente pratique pour sécuriser l\u0026rsquo;accès à distance à votre appareil. Cela élimine la nécessité d\u0026rsquo;entrer un mot de passe à chaque fois que vous vous connectez via SSH, tout en renforçant la sécurité de votre connexion.\nGénération de la Paire de Clés Sur Votre Ordinateur :\nUtilisez la commande suivante pour générer une paire de clés : ssh-keygen -t rsa Suivez les instructions à l\u0026rsquo;écran. Appuyez simplement sur Enter pour accepter les paramètres par défaut, à moins que vous ne souhaitiez spécifier un emplacement ou un nom de fichier différent. Copiez la Clé Publique sur le Raspberry Pi :\nUtilisez la commande suivante pour copier la clé publique sur votre Raspberry Pi (remplacez pi et adresse_ip par votre nom d\u0026rsquo;utilisateur et l\u0026rsquo;adresse IP de votre Raspberry Pi) : ssh-copy-id pi@adresse_ip Vous serez invité à saisir le mot de passe de votre Raspberry Pi. Connexion SSH avec la Clé Maintenant, vous devriez pouvoir vous connecter à votre Raspberry Pi sans être invité à entrer un mot de passe :\nssh pi@raspberrypi Vous devriez être connecté sans avoir à saisir de mot de passe.\nDésactivation de la Connexion par Mot de Passe (Optionnel) : Pour renforcer la sécurité, vous pouvez désactiver la connexion par mot de passe sur votre Raspberry Pi. Éditez le fichier de configuration SSH :\nsudo nano /etc/ssh/sshd_config Modifiez PasswordAuthentication yes en PasswordAuthentication no, ensuite redémarrez le service SSH :\nsudo systemctl restart sshd.service Changement du port SSH Le port SSH par défaut sur tous les serveurs est le port 22. Un changement de ce port permet de rendre plus difficile les attaques automatisées. Pour effectuer cette modification, vous devez éditer le fichier /etc/ssh/sshd_config avec les droits administrateurs :\nsudo nano /etc/ssh/sshd_config Vous pouvez ensuite retirer le # à la ligne #Port 22 et changer la valeur 22 par le port de votre choix entre 1024 et 65536. Enregistrez et quittez nano avec les raccourcis clavier : ctrl+o, ctrl+x.\nEnsuite, vous devez relancer openssh-server pour appliquer les modifications :\nsudo systemctl restart sshd.service La connexion à votre Raspberry s\u0026rsquo;effectuera avec un nouveau paramètre pour spécifier le port de connexion (remplacez pi par votre nom d\u0026rsquo;utilisateur, adresse_ip par l\u0026rsquo;adresse IP réelle et port_de_connexion par le nouveau port) :\nssh pi@adresse_ip -p port_de_connexion La configuration du SSH sur votre Raspberry Pi est une étape essentielle pour garantir un accès à distance sécurisé. En suivant ces étapes simples, vous améliorez la gestion de votre Raspberry Pi tout en renforçant la sécurité de votre système. N\u0026rsquo;hésitez pas à explorer des options avancées pour personnaliser davantage votre configuration SSH en fonction de vos besoins spécifiques.\n","date":"2024-01-05T00:00:00Z","image":"https://albanpetit.com/posts/raspberry-ssh-config/main_hu3d03a01dcc18bc5be0e67db3d8d209a6_150857_120x120_fill_q75_box_smart1.jpg","permalink":"https://albanpetit.com/fr/posts/raspberry-ssh-config/","title":"Configuration SSH sur un Raspberry"},{"content":"Le Raspberry Pi est un formidable micro-ordinateur qui, grâce à sa polyvalence, est utilisé dans divers projets, de l’automatisation domestique à la création de serveurs personnels. La configuration du WiFi sur ces derniers est presque indispensable pour exploiter au maximum leurs possibilités. Deux grandes options s\u0026rsquo;offrent aux utilisateurs : la configuration avant ou après le premier démarrage. Il s\u0026rsquo;agit généralement d\u0026rsquo;une étape importante, surtout avec l\u0026rsquo;utilisation de Raspbian Lite, qui ne dispose pas d\u0026rsquo;interface graphique et nécessite une connexion SSH pour son utilisation.\nRaspberry Pi Imager Cette partie concerne donc la configuration du Wifi et du SSH avant même le premier lancement du Raspberry. Grâce à la Raspberry Pi Foundation, il n’est même plus nécessaire d’avoir un clavier et un écran pour cela. Ils nous fournissent un utilitaire disponible sur toutes les plateformes, Windows, Apple et Linux, qui permet de produire des cartes SD fonctionnelles avec de multiples systèmes d’exploitation. En plus de graver pour nous les images des systèmes d’exploitation, cet utilitaire permet même la configuration des éléments les plus importants pour la mise en place d’un Raspberry.\nCet utilitaire est disponible en téléchargement directement sur la page des logiciels du site Raspberry : Raspberry Software. Il suffit de sélectionner le système d’exploitation que vous voulez utiliser et votre périphérique de stockage (carte SD ou USB), puis d’appuyer sur WRITE pour lancer l’écriture de l’image sur le périphérique.\nOptions avancées En bas à droite de l’interface, un bouton en forme d’engrenage permet d’accéder aux fonctions avancées de cet utilitaire, au sein de ces fonctions nous pouvons configurer le SSH, le nom du Raspberry sur le réseau mais aussi les informations nécessaires pour qu’il puisse se connecter sur le réseau Wifi :\nIl s\u0026rsquo;agira de remplir : le SSID, le mot de passe du réseau, et la localisation du routeur émettant le Wifi. Lors de son premier démarrage et pour tous les suivants le Raspberry qui accueille cette carte SD pourra donc se connecter au Wifi via les informations saisies durant la gravure de cette image.\nLe SSID, sigle de l\u0026rsquo;anglais : service set identifier (« identifiant défini de service »), est le nom d\u0026rsquo;un réseau sans fil selon la norme IEEE 802.11. Ce nom est constitué par une chaîne de caractères de 0 à 32 octets.\nConfiguration en ligne de commande L\u0026rsquo;application Raspberry pi imager permet de configurer le wifi avant même le premier démarrage du Raspberry, mais parfois cette configuration doit être faite après le démarrage, dans ce cas plusieurs possibilités s\u0026rsquo;offrent à nous : une configuration entièrement manuelle en ligne de commande ou alors l\u0026rsquo;utilitaire : Raspi-config.\nConfiguration manuelle Il est d\u0026rsquo;abord nécessaire de configurer les interfaces réseaux, pour cela, l’utilitaire d’édition de fichier texte par défaut de Raspbian, nano nous aidera :\nsudo nano /etc/network/interfaces Ce fichier liste toutes les interfaces réseaux existantes, il ne sera donc probablement pas vide. Il faut ajouter une ligne en haut du fichier :\nauto wlan0 Ensuite, il faut permettre au Raspberry d\u0026rsquo;utiliser le Wifi comme méthode de connexion à internet et d\u0026rsquo;utiliser le fichier de configuration /etc/wpa_supplicant/wpa_supplicant.conf. Il faut alors également ajouter à la toute fin du même fichier les lignes de configuration suivantes :\nallow-hotplug wlan0 iface wlan0 inet dhcp wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf iface default inet dhcp Il faut ensuite enregistrer les modifications, puis quitter nano avec les raccourcis suivants : ctrl+o, ctrl+x.\nLa suite de la configuration aura lieu dans le fichier /etc/wpa_supplicant/wpa_supplicant.conf :\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf Ce fichier n\u0026rsquo;est encore une fois probablement pas vide, il faut ajouter les lignes de configurations suivantes à la fin du fichier (en changeant bien sûr LE_NOM_DU_RESEAU et LE_MOT_DE_PASSE):\ncountry=FR ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 network={ ssid=\u0026#34;LE_NOM_DU_RESEAU\u0026#34; psk=\u0026#34;LE_MOT_DE_PASSE\u0026#34; } De la même façon, il faut enregistrer le fichier et quitter nano avec les raccourcis : ctrl+o, ctrl+x.\nSuite à cela, la configuration est normalement fonctionnelle. Un redémarrage permet de le vérifier :\nsudo reboot Pour vérifier la connexion après un redémarrage, un simple ping fera l\u0026rsquo;affaire :\nping google.com Voici le genre de réponse attendue :\nRaspi-config La fondation Raspberry met également à disposition un outil pour faciliter ce type de configuration, bien qu\u0026rsquo;il soit moins complet qu\u0026rsquo;une configuration manuelle, il est en contrepartie bien plus simple à prendre en main : Raspi-config.\nsudo raspi-config Voici l\u0026rsquo;interface qui s\u0026rsquo;ouvre à nous, elle permet la configuration de beaucoup de choses, mais ce qui concerne le Wifi est disponible dans: System Options, ensuite: Wireless Lan :\nRaspi-config demande de configurer le pays dans lequel le raspberry sera utilisé :\nL\u0026rsquo;utilitaire demandera ensuite le SSID et le mot de passe du réseau.\nIl suffit maintenant de quitter l\u0026rsquo;outil pour appliquer la configuration. Le Raspberry se connectera automatiquement à chaque redémarrage.\nUne IP statique ? L\u0026rsquo;objectif de ce genre de configuration est généralement d\u0026rsquo;utiliser le Raspberry sans clavier, ni souris : avec une connexion SSH. Il est donc intéressant de s\u0026rsquo;assurer que ce dernier ne va pas changer d\u0026rsquo;adresse IP.\nLa configuration de l\u0026rsquo;interface a encore lieu dans /etc/network/interfaces:\nsudo nano /etc/network/interfaces Il faut y changer la ligne iface wlan0 inet dhcp en iface wlan0 inet static, cela va permettre de faire évoluer l\u0026rsquo;interface wlan0 de DHCP à static. Dans ce même fichier il faut ajouter les lignes de configuration suivantes juste avant wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf:\naddress 192.168.1.155 # IP statique souhaitée netmask 255.255.255.0 gateway 192.168.1.1 # IP du routeur Le fichier /etc/network/interfaces doit normalement ressembler à cela après toutes les configurations :\nauto wlan0 iface lo inet loopback iface eth0 inet dhcp allow-hotplug wlan0 iface wlan0 inet static address 192.168.1.155 netmask 255.255.255.0 gateway 192.168.1.1 wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf iface default inet dhcp Un redémarrage du Raspberry permet de vérifier le bon fonctionnement de la configuration :\nsudo reboot ","date":"2023-12-26T00:00:00Z","image":"https://albanpetit.com/posts/raspberry-wifi-config/main_hu3d03a01dcc18bc5be0e67db3d8d209a6_595615_120x120_fill_q75_box_smart1.jpg","permalink":"https://albanpetit.com/fr/posts/raspberry-wifi-config/","title":"Configuration du Wifi sur un Raspberry"}]