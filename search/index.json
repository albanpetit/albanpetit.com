[{"content":"Remote access to your Raspberry Pi is crucial to simplify management without the need for a physical screen, keyboard, or mouse. Configuring SSH (Secure Shell) access is a crucial step in establishing a secure connection with your Raspberry Pi.\nSimilar to the Wi-Fi configuration, you can configure some important elements of the SSH server even before the first boot of the Raspberry using the Raspberry Pi Imager utility.\nopenssh-server Before you begin, ensure that your Raspberry Pi is equipped with a compatible operating system. Commonly used systems like Raspbian support SSH right from the installation. Also, make sure your Raspberry Pi is connected to your local network. You can check the proper functioning of the SSH server on your Raspberry with the following command:\nsudo systemctl status sshd.service If the SSH server is working correctly, the response to this command should look like this: If the command returns an error like: Unit sshd.service could not be found., it is necessary to install the SSH server. The following commands can help you with that:\nsudo apt update sudo apt upgrade sudo apt install openssh-server SSH Activation The easiest way to enable the SSH service is to use the raspi-config tool from the Raspberry Foundation. To do this, follow these steps:\nOpen a terminal on your Raspberry Pi. Type the following command to open the configuration tool: sudo raspi-config Select the Interface Options option. Navigate to SSH and press Enter. Choose Yes to enable the SSH service. Press Finish to exit the configuration tool. For the next steps, you need to know the IP address of the Raspberry on your network. You can use the interface of your network router or the following command on the Raspberry:\nhostname -I | awk \u0026#39;{print $1}\u0026#39; SSH Connection from Another Device Once the SSH service is enabled, you can connect to your Raspberry Pi from another computer on the same network. Use the IP address of your Raspberry Pi to establish the SSH connection. The standard command is as follows (replace address_ip with the actual address):\nssh pi@address_ip You will be prompted to enter the default password, which is usually raspberry for the pi user.\nChanging the Default Password It is highly recommended to change the default password of your Raspberry Pi to enhance security. Use the following command to change the password for the pi user:\npasswd Follow the instructions to set a strong new password.\nAdvanced Configuration For security measures, you can make some additional modifications.\nUse of SSH Keys Using an SSH key on your Raspberry Pi is an excellent practice to secure remote access to your device. This eliminates the need to enter a password every time you connect via SSH, while enhancing the security of your connection.\nKey Pair Generation On Your Computer:\nUse the following command to generate a key pair: ssh-keygen -t rsa Follow the on-screen instructions. Simply press Enter to accept the default settings unless you want to specify a different location or filename. Copy the Public Key to the Raspberry Pi:\nUse the following command to copy the public key to your Raspberry Pi (replace pi and address_ip with your username and the IP address of your Raspberry Pi): ssh-copy-id pi@address_ip You will be prompted to enter the password for your Raspberry Pi. SSH Connection with the Key Now you should be able to connect to your Raspberry Pi without being prompted for a password:\nssh pi@raspberrypi You should be connected without entering a password.\nDisabling Password Authentication (Optional): To enhance security, you can disable password authentication on your Raspberry Pi. Edit the SSH configuration file:\nsudo nano /etc/ssh/sshd_config Change PasswordAuthentication yes to PasswordAuthentication no, then restart the SSH service:\nsudo systemctl restart sshd.service Changing the SSH Port The default SSH port on all servers is port 22. Changing this port makes automated attacks more difficult. To make this change, edit the /etc/ssh/sshd_config file with administrator rights:\nsudo nano /etc/ssh/sshd_config You can then remove the # on the line #Port 22 and change the value 22 to the port of your choice between 1024 and 65536. Save and exit nano with the keyboard shortcuts: ctrl+o, ctrl+x.\nNext, you need to restart openssh-server to apply the changes:\nsudo systemctl restart sshd.service Connecting to your Raspberry will be done with a new parameter to specify the connection port (replace pi with your username, address_ip with the actual IP address, and port_de_connexion with the new port):\nssh pi@address_ip -p port_de_connexion Configuring SSH on your Raspberry Pi is an essential step to ensure secure remote access. By following these simple steps, you enhance the management of your Raspberry Pi while reinforcing the security of your system. Feel free to explore advanced options to further customize your SSH configuration based on your specific needs.\n","date":"2024-01-05T00:00:00Z","image":"https://albanpetit.com/posts/raspberry-ssh-config/main_hu3d03a01dcc18bc5be0e67db3d8d209a6_150857_120x120_fill_q75_box_smart1.jpg","permalink":"https://albanpetit.com/posts/raspberry-ssh-config/","title":"Raspberry SSH configuration"},{"content":"The Raspberry Pi is a fantastic microcomputer that, thanks to its versatility, is used in various projects, from home automation to the creation of personal servers. Configuring WiFi on these devices is almost essential to fully exploit their capabilities. Users have two main options: configuration before or after the first boot. This is generally a crucial step, especially when using Raspbian Lite, which lacks a graphical interface and requires an SSH connection for usage.\nRaspberry Pi Imager This section focuses on configuring Wi-Fi and SSH even before the first Raspberry startup. Thanks to the Raspberry Pi Foundation, there\u0026rsquo;s no longer a need for a keyboard and screen. They provide a utility available on all platforms—Windows, Apple, and Linux—that enables the creation of functional SD cards with multiple operating systems. Besides writing OS images, this utility even allows the configuration of essential elements for setting up a Raspberry Pi.\nYou can download this utility directly from the Raspberry Pi software page: Raspberry Software. Simply select the operating system you want to use and your storage device (SD card or USB), then press WRITE to start writing the image to the device.\nAdvanced Options At the bottom right of the interface, a gear-shaped button provides access to the advanced functions of this utility. Within these functions, you can configure SSH, the name of the Raspberry Pi on the network, and also the necessary information for it to connect to the Wi-Fi network:\nYou\u0026rsquo;ll need to fill in the SSID, the network password, and the location of the router emitting the Wi-Fi signal. During its first startup and all subsequent ones, the Raspberry Pi that hosts this SD card will be able to connect to Wi-Fi using the information entered during the image writing.\nThe SSID, an acronym for service set identifier, is the name of a wireless network according to IEEE 802.11 standards. This name consists of a character string of 0 to 32 octets.\nCommand Line Configuration The Raspberry Pi Imager application allows configuring Wi-Fi even before the first Raspberry startup. However, sometimes this configuration must be done after startup. In this case, several options are available to us: a fully manual command-line configuration or the utility: Raspi-config.\nManual Configuration First, it is necessary to configure the network interfaces. For this, the default text file editing utility in Raspbian, nano, will help us:\nsudo nano /etc/network/interfaces This file lists all existing network interfaces, so it probably won\u0026rsquo;t be empty. Add a line at the top of the file:\nauto wlan0 Next, allow the Raspberry Pi to use Wi-Fi as the method of connecting to the internet and use the configuration file /etc/wpa_supplicant/wpa_supplicant.conf. Also, add the following lines to the end of the same file:\nallow-hotplug wlan0 iface wlan0 inet dhcp wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf iface default inet dhcp Save the changes and then exit nano with the following shortcuts: ctrl+o, ctrl+x.\nThe rest of the configuration takes place in the file /etc/wpa_supplicant/wpa_supplicant.conf:\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf This file is probably not empty either. Add the following configuration lines to the end of the file (making sure to change NETWORK_NAME and PASSWORD):\ncountry=US ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 network={ ssid=\u0026#34;NETWORK_NAME\u0026#34; psk=\u0026#34;PASSWORD\u0026#34; } Similarly, save the file and exit nano using the shortcuts: ctrl+o, ctrl+x.\nFollowing this, the configuration should be operational. A restart will verify it:\nsudo reboot To check the connection after a restart, a simple ping will do:\nping google.com Here\u0026rsquo;s the expected response:\nRaspi-config The Raspberry Pi Foundation also provides a tool to facilitate this type of configuration. Although it is less comprehensive than manual configuration, it is much simpler to use: Raspi-config.\nsudo raspi-config Here\u0026rsquo;s the interface that opens up. It allows configuration for many things, but concerning Wi-Fi, it is available in System Options, then Wireless Lan:\nRaspi-config will then ask to configure the country in which the Raspberry will be used:\nThe utility will then ask for the SSID and password of the network.\nNow, simply exit the tool to apply the configuration. The Raspberry will connect automatically upon each restart.\nStatic IP? The goal of this kind of configuration is generally to use the Raspberry without a keyboard or mouse, with an SSH connection. Therefore, it is essential to ensure that it does not change its IP address.\nThe interface configuration still takes place in /etc/network/interfaces:\nsudo nano /etc/network/interfaces Change the line iface wlan0 inet dhcp to iface wlan0 inet static. This will change the wlan0 interface from DHCP to static. In the same file, add the following configuration lines just before wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf:\naddress 192.168.1.155 # Desired static IP netmask 255.255.255.0 gateway 192.168.1.1 # Router IP The file /etc/network/interfaces should now look something like this after all configurations:\nauto wlan0 iface lo inet loopback iface eth0 inet dhcp allow-hotplug wlan0 iface wlan0 inet static address 192.168.1.155 netmask 255.255.255.0 gateway 192.168.1.1 wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf iface default inet dhcp A restart of the Raspberry will confirm the proper functioning of the configuration:\nsudo reboot ","date":"2023-12-26T00:00:00Z","image":"https://albanpetit.com/posts/raspberry-wifi-config/main_hu3d03a01dcc18bc5be0e67db3d8d209a6_595615_120x120_fill_q75_box_smart1.jpg","permalink":"https://albanpetit.com/posts/raspberry-wifi-config/","title":"Raspberry wifi configuration"}]