<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alban Petit</title><link>https://albanpetit.com/</link><description>Recent content on Alban Petit</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 05 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://albanpetit.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Raspberry SSH configuration</title><link>https://albanpetit.com/posts/raspberry-ssh-config/</link><pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate><guid>https://albanpetit.com/posts/raspberry-ssh-config/</guid><description>&lt;img src="https://albanpetit.com/posts/raspberry-ssh-config/main.jpg" alt="Featured image of post Raspberry SSH configuration" />&lt;p>Remote access to your Raspberry Pi is crucial to simplify management without the need for a physical screen, keyboard, or mouse. Configuring SSH (Secure Shell) access is a crucial step in establishing a secure connection with your Raspberry Pi.&lt;/p>
&lt;p>Similar to the &lt;a class="link" href="https://albanpetit.com/fr/posts/raspberry-wifi-config/" >Wi-Fi configuration&lt;/a>, you can configure some important elements of the &lt;strong>SSH&lt;/strong> server even before the first boot of the Raspberry using the &lt;strong>Raspberry Pi Imager&lt;/strong> utility.&lt;/p>
&lt;h2 id="openssh-server">openssh-server&lt;/h2>
&lt;p>Before you begin, ensure that your &lt;strong>Raspberry Pi&lt;/strong> is equipped with a compatible operating system. Commonly used systems like &lt;strong>Raspbian&lt;/strong> support &lt;strong>SSH&lt;/strong> right from the installation. Also, make sure your Raspberry Pi is connected to your local network.
You can check the proper functioning of the &lt;strong>SSH&lt;/strong> server on your &lt;strong>Raspberry&lt;/strong> with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo systemctl status sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the &lt;strong>SSH&lt;/strong> server is working correctly, the response to this command should look like this:
&lt;img src="https://albanpetit.com/posts/raspberry-ssh-config/systemctl-sshd.png"
width="1004"
height="567"
srcset="https://albanpetit.com/posts/raspberry-ssh-config/systemctl-sshd_hu636a3b8dfac440bb476e59d03e58d194_144723_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-ssh-config/systemctl-sshd_hu636a3b8dfac440bb476e59d03e58d194_144723_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="systemctl status sshd.service"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="424px"
>
If the command returns an error like: &lt;code>Unit sshd.service could not be found.&lt;/code>, it is necessary to install the &lt;strong>SSH&lt;/strong> server. The following commands can help you with that:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt upgrade
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install openssh-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssh-activation">SSH Activation&lt;/h2>
&lt;p>The easiest way to enable the SSH service is to use the &lt;strong>raspi-config&lt;/strong> tool from the &lt;strong>Raspberry Foundation&lt;/strong>. To do this, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Open a terminal on your Raspberry Pi.&lt;/li>
&lt;li>Type the following command to open the configuration tool:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo raspi-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Select the &lt;strong>Interface Options&lt;/strong> option.&lt;/li>
&lt;li>Navigate to &lt;strong>SSH&lt;/strong> and press &lt;strong>Enter&lt;/strong>.&lt;/li>
&lt;li>Choose &lt;strong>Yes&lt;/strong> to enable the SSH service.&lt;/li>
&lt;li>Press &lt;strong>Finish&lt;/strong> to exit the configuration tool.&lt;/li>
&lt;/ol>
&lt;p>For the next steps, you need to know the &lt;strong>IP&lt;/strong> address of the &lt;strong>Raspberry&lt;/strong> on your network. You can use the interface of your network router or the following command on the &lt;strong>Raspberry&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hostname -I &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssh-connection-from-another-device">SSH Connection from Another Device&lt;/h2>
&lt;p>Once the SSH service is enabled, you can connect to your Raspberry Pi from another computer on the same network. Use the IP address of your Raspberry Pi to establish the SSH connection. The standard command is as follows (replace &lt;code>address_ip&lt;/code> with the actual address):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh pi@address_ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will be prompted to enter the default password, which is usually &lt;strong>raspberry&lt;/strong> for the &lt;strong>pi&lt;/strong> user.&lt;/p>
&lt;h2 id="changing-the-default-password">Changing the Default Password&lt;/h2>
&lt;p>It is highly recommended to change the default password of your Raspberry Pi to enhance security. Use the following command to change the password for the &lt;strong>pi&lt;/strong> user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Follow the instructions to set a strong new password.&lt;/p>
&lt;h2 id="advanced-configuration">Advanced Configuration&lt;/h2>
&lt;p>For security measures, you can make some additional modifications.&lt;/p>
&lt;h3 id="use-of-ssh-keys">Use of SSH Keys&lt;/h3>
&lt;p>Using an SSH key on your Raspberry Pi is an excellent practice to secure remote access to your device. This eliminates the need to enter a password every time you connect via SSH, while enhancing the security of your connection.&lt;/p>
&lt;h4 id="key-pair-generation">Key Pair Generation&lt;/h4>
&lt;p>&lt;strong>On Your Computer:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Use the following command to generate a key pair:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Follow the on-screen instructions. Simply press &lt;code>Enter&lt;/code> to accept the default settings unless you want to specify a different location or filename.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Copy the Public Key to the Raspberry Pi:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Use the following command to copy the public key to your Raspberry Pi (replace &lt;code>pi&lt;/code> and &lt;code>address_ip&lt;/code> with your username and the IP address of your Raspberry Pi):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-copy-id pi@address_ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>You will be prompted to enter the password for your Raspberry Pi.&lt;/li>
&lt;/ul>
&lt;h4 id="ssh-connection-with-the-key">SSH Connection with the Key&lt;/h4>
&lt;p>Now you should be able to connect to your Raspberry Pi without being prompted for a password:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh pi@raspberrypi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should be connected without entering a password.&lt;/p>
&lt;h4 id="disabling-password-authentication-optional">Disabling Password Authentication (Optional):&lt;/h4>
&lt;p>To enhance security, you can disable password authentication on your Raspberry Pi. Edit the SSH configuration file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change &lt;code>PasswordAuthentication yes&lt;/code> to &lt;code>PasswordAuthentication no&lt;/code>, then restart the SSH service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="changing-the-ssh-port">Changing the SSH Port&lt;/h3>
&lt;p>The default &lt;strong>SSH&lt;/strong> port on all servers is port 22. Changing this port makes automated attacks more difficult. To make this change, edit the &lt;code>/etc/ssh/sshd_config&lt;/code> file with administrator rights:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can then remove the &lt;code>#&lt;/code> on the line &lt;code>#Port 22&lt;/code> and change the value 22 to the port of your choice between 1024 and 65536. Save and exit &lt;strong>nano&lt;/strong> with the keyboard shortcuts: &lt;code>ctrl+o&lt;/code>, &lt;code>ctrl+x&lt;/code>.&lt;/p>
&lt;p>Next, you need to restart openssh-server to apply the changes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Connecting to your Raspberry will be done with a new parameter to specify the connection port (replace &lt;code>pi&lt;/code> with your username, &lt;code>address_ip&lt;/code> with the actual IP address, and &lt;code>port_de_connexion&lt;/code> with the new port):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh pi@address_ip -p port_de_connexion
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Configuring SSH on your Raspberry Pi is an essential step to ensure secure remote access. By following these simple steps, you enhance the management of your Raspberry Pi while reinforcing the security of your system. Feel free to explore advanced options to further customize your SSH configuration based on your specific needs.&lt;/p></description></item><item><title>Raspberry wifi configuration</title><link>https://albanpetit.com/posts/raspberry-wifi-config/</link><pubDate>Tue, 26 Dec 2023 00:00:00 +0000</pubDate><guid>https://albanpetit.com/posts/raspberry-wifi-config/</guid><description>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/main.jpg" alt="Featured image of post Raspberry wifi configuration" />&lt;p>The Raspberry Pi is a fantastic microcomputer that, thanks to its versatility, is used in various projects, from home automation to the creation of personal servers. Configuring WiFi on these devices is almost essential to fully exploit their capabilities. Users have two main options: configuration before or after the first boot. This is generally a crucial step, especially when using &lt;strong>Raspbian Lite&lt;/strong>, which lacks a graphical interface and requires an &lt;strong>SSH&lt;/strong> connection for usage.&lt;/p>
&lt;h2 id="raspberry-pi-imager">Raspberry Pi Imager&lt;/h2>
&lt;p>This section focuses on configuring &lt;strong>Wi-Fi&lt;/strong> and &lt;strong>SSH&lt;/strong> even before the first Raspberry startup. Thanks to the &lt;a class="link" href="https://www.raspberrypi.org" target="_blank" rel="noopener"
>Raspberry Pi Foundation&lt;/a>, there&amp;rsquo;s no longer a need for a keyboard and screen. They provide a utility available on all platforms—Windows, Apple, and Linux—that enables the creation of functional SD cards with multiple operating systems. Besides writing OS images, this utility even allows the configuration of essential elements for setting up a &lt;strong>Raspberry Pi&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspberry-pi-imager-1.png"
width="1064"
height="745"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspberry-pi-imager-1_hu545a8556e294b95fc5055bc87c5bbd7c_117478_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspberry-pi-imager-1_hu545a8556e294b95fc5055bc87c5bbd7c_117478_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Raspberry Pi Imager"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="342px"
>&lt;/p>
&lt;p>You can download this utility directly from the &lt;strong>Raspberry Pi&lt;/strong> software page: &lt;a class="link" href="https://www.raspberrypi.com/software/" target="_blank" rel="noopener"
>Raspberry Software&lt;/a>. Simply select the operating system you want to use and your storage device (SD card or USB), then press &lt;strong>WRITE&lt;/strong> to start writing the image to the device.&lt;/p>
&lt;h3 id="advanced-options">Advanced Options&lt;/h3>
&lt;p>At the bottom right of the interface, a gear-shaped button provides access to the advanced functions of this utility. Within these functions, you can configure &lt;strong>SSH&lt;/strong>, the name of the &lt;strong>Raspberry Pi&lt;/strong> on the network, and also the necessary information for it to connect to the &lt;strong>Wi-Fi&lt;/strong> network:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspberry-pi-imager-2.png"
width="1108"
height="789"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspberry-pi-imager-2_hu1f8e2986170e4e6fc14d485f8cad55b6_165189_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspberry-pi-imager-2_hu1f8e2986170e4e6fc14d485f8cad55b6_165189_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Raspberry Pi Imager advanced options"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="337px"
>&lt;/p>
&lt;p>You&amp;rsquo;ll need to fill in the &lt;strong>SSID&lt;/strong>, the network password, and the location of the router emitting the Wi-Fi signal. During its first startup and all subsequent ones, the Raspberry Pi that hosts this SD card will be able to connect to Wi-Fi using the information entered during the image writing.&lt;/p>
&lt;blockquote>
&lt;p>The &lt;strong>SSID&lt;/strong>, an acronym for &lt;em>service set identifier&lt;/em>, is the name of a wireless network according to IEEE 802.11 standards. This name consists of a character string of 0 to 32 octets.&lt;/p>
&lt;/blockquote>
&lt;h2 id="command-line-configuration">Command Line Configuration&lt;/h2>
&lt;p>The &lt;strong>Raspberry Pi Imager&lt;/strong> application allows configuring Wi-Fi even before the first Raspberry startup. However, sometimes this configuration must be done after startup. In this case, several options are available to us: a fully manual command-line configuration or the utility: &lt;strong>Raspi-config&lt;/strong>.&lt;/p>
&lt;h3 id="manual-configuration">Manual Configuration&lt;/h3>
&lt;p>First, it is necessary to configure the network interfaces. For this, the default text file editing utility in &lt;strong>Raspbian&lt;/strong>, &lt;strong>nano&lt;/strong>, will help us:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/network/interfaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This file lists all existing network interfaces, so it probably won&amp;rsquo;t be empty. Add a line at the top of the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">auto wlan0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, allow the &lt;strong>Raspberry Pi&lt;/strong> to use Wi-Fi as the method of connecting to the internet and use the configuration file &lt;code>/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code>. Also, add the following lines to the end of the same file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">allow-hotplug wlan0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface wlan0 inet dhcp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface default inet dhcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save the changes and then exit &lt;strong>nano&lt;/strong> with the following shortcuts: &lt;code>ctrl+o&lt;/code>, &lt;code>ctrl+x&lt;/code>.&lt;/p>
&lt;p>The rest of the configuration takes place in the file &lt;code>/etc/wpa_supplicant/wpa_supplicant.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This file is probably not empty either. Add the following configuration lines to the end of the file (making sure to change &lt;strong>NETWORK_NAME&lt;/strong> and &lt;strong>PASSWORD&lt;/strong>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">country&lt;/span>&lt;span class="o">=&lt;/span>US
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ctrl_interface&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">DIR&lt;/span>&lt;span class="o">=&lt;/span>/var/run/wpa_supplicant &lt;span class="nv">GROUP&lt;/span>&lt;span class="o">=&lt;/span>netdev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">update_config&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">network&lt;/span>&lt;span class="o">={&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ssid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;NETWORK_NAME&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">psk&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;PASSWORD&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Similarly, save the file and exit &lt;strong>nano&lt;/strong> using the shortcuts: &lt;code>ctrl+o&lt;/code>, &lt;code>ctrl+x&lt;/code>.&lt;/p>
&lt;p>Following this, the configuration should be operational. A restart will verify it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To check the connection after a restart, a simple &lt;code>ping&lt;/code> will do:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ping google.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s the expected response:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/ping-google.png"
width="885"
height="497"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/ping-google_hucf2992d6ed901688f7848058661adc99_105795_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/ping-google_hucf2992d6ed901688f7848058661adc99_105795_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Ping google"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="427px"
>&lt;/p>
&lt;h3 id="raspi-config">Raspi-config&lt;/h3>
&lt;p>The Raspberry Pi Foundation also provides a tool to facilitate this type of configuration. Although it is less comprehensive than manual configuration, it is much simpler to use: &lt;strong>Raspi-config&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo raspi-config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s the interface that opens up. It allows configuration for many things, but concerning Wi-Fi, it is available in &lt;strong>System Options&lt;/strong>, then &lt;strong>Wireless Lan&lt;/strong>:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-1.png"
width="857"
height="595"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-1_hue8092d57cbe9c66a5d98b79fcbc0dc82_107090_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-1_hue8092d57cbe9c66a5d98b79fcbc0dc82_107090_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="raspi-config menu 1"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>
&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-2.png"
width="857"
height="595"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-2_hu92d5ea2143a29ed4d9c784913081d7f6_104135_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-2_hu92d5ea2143a29ed4d9c784913081d7f6_104135_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="raspi-config menu 2"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>&lt;/p>
&lt;p>Raspi-config will then ask to configure the country in which the Raspberry will be used:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-3.png"
width="857"
height="595"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-3_hu6b085c53bed49fdb5ee7a50289ab841a_95184_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-3_hu6b085c53bed49fdb5ee7a50289ab841a_95184_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="raspi-config menu 3"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>
&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-4.png"
width="857"
height="595"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-4_huda5f0479c87521d8b6bb9f946e532812_77876_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-4_huda5f0479c87521d8b6bb9f946e532812_77876_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="raspi-config menu 4"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>&lt;/p>
&lt;p>The utility will then ask for the &lt;strong>SSID&lt;/strong> and &lt;strong>password&lt;/strong> of the network.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-5.png"
width="857"
height="595"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-5_hu0b57c46fdd66cdfc75b55814abc5951e_78520_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-5_hu0b57c46fdd66cdfc75b55814abc5951e_78520_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="raspi-config SSID"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>
&lt;img src="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-6.png"
width="857"
height="595"
srcset="https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-6_hu4a114d96bf514baeb558cd5062d7227a_79547_480x0_resize_box_3.png 480w, https://albanpetit.com/posts/raspberry-wifi-config/raspi-config-6_hu4a114d96bf514baeb558cd5062d7227a_79547_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="raspi-config password"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="345px"
>&lt;/p>
&lt;p>Now, simply exit the tool to apply the configuration. The Raspberry will connect automatically upon each restart.&lt;/p>
&lt;h3 id="static-ip">Static IP?&lt;/h3>
&lt;p>The goal of this kind of configuration is generally to use the Raspberry without a keyboard or mouse, with an &lt;strong>SSH&lt;/strong> connection. Therefore, it is essential to ensure that it does not change its &lt;strong>IP&lt;/strong> address.&lt;/p>
&lt;p>The interface configuration still takes place in &lt;strong>/etc/network/interfaces&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo nano /etc/network/interfaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change the line &lt;code>iface wlan0 inet dhcp&lt;/code> to &lt;code>iface wlan0 inet static&lt;/code>. This will change the &lt;code>wlan0&lt;/code> interface from DHCP to static. In the same file, add the following configuration lines just before &lt;code>wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">address 192.168.1.155 &lt;span class="c1"># Desired static IP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netmask 255.255.255.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gateway 192.168.1.1 &lt;span class="c1"># Router IP&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The file &lt;code>/etc/network/interfaces&lt;/code> should now look something like this after all configurations:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">auto wlan0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface lo inet loopback
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface eth0 inet dhcp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">allow-hotplug wlan0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface wlan0 inet static
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">address 192.168.1.155
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netmask 255.255.255.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gateway 192.168.1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface default inet dhcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A restart of the Raspberry will confirm the proper functioning of the configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ADXL335 Accelerometer</title><link>https://albanpetit.com/projects/adxl335-accelerometer/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://albanpetit.com/projects/adxl335-accelerometer/</guid><description>&lt;img src="https://albanpetit.com/projects/adxl335-accelerometer/main.jpg" alt="Featured image of post ADXL335 Accelerometer" /></description></item><item><title>About me</title><link>https://albanpetit.com/about/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://albanpetit.com/about/</guid><description>&lt;img src="https://albanpetit.com/about/lamachinerie.jpg" alt="Featured image of post About me" />&lt;p>Hello! I&amp;rsquo;m Alban Petit, a passionate French web developer working at La Machinerie, a facility that houses a Fablab. I&amp;rsquo;ve been involved with this organization for the past 7 years, starting as a volunteer and eventually becoming responsible for a department that offers a range of technical services, including electronics, programming, and digital fabrication.&lt;/p>
&lt;p>Through my work experiences and interactions at La Machinerie, I discovered a strong passion for software development, electronics, and prototyping in general.&lt;/p>
&lt;h2 id="my-experiences">My Experiences&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Assistant FabManager, La Machinerie Association&lt;/strong>, 2015 - 2016, Amiens&lt;/p>
&lt;p>La Machinerie houses a Fablab that caters to entrepreneurs, designers, artists, DIY enthusiasts, students, and hackers, providing a space to rapidly transition from concept to prototyping. As a FabManager, I was in charge of managing this facility.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>BTS Apprenticeship, Etoele Company&lt;/strong>, 2016 - 2018, Amiens&lt;/p>
&lt;p>Etoele is a research bureau that serves both individuals and professionals, including large-scale industrial clients. During my time there, I worked on various projects, including embedded development, electronic prototyping, custom web development, web services architecture, IoT development, signal processing, robotics, 3D scanning, and reverse engineering.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Bachelor&amp;rsquo;s Degree Apprenticeship in Computer Science, Etoele Company&lt;/strong>, 2018 - 2019, Amiens
During this period, I continued my role as a web and embedded developer at Etoele.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Web &amp;amp; Embedded developer, Etoele Company&lt;/strong>, 2019 - 2021, Amiens&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Head of Manufacturing Department, La Machinerie Association&lt;/strong>, 2022 - 2023, Amiens
Currently, I hold the position of head of the manufacturing department at La Machinerie, where we assist professionals in developing prototypes in areas such as electronics, furniture, functional parts, and connected devices.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="la-machinerie">La Machinerie&lt;/h2>
&lt;p>La Machinerie is an association that was founded in April 2014 by a group of idealistic individuals in Amiens who aspired to &amp;ldquo;create and work differently.&amp;rdquo; It encompasses a Fablab and coworking space, drawing inspiration from the Fablab movement to provide an accessible community resource where users contribute their skills, tools, and knowledge. The collective embraces various aspirations, including citizen innovation, ecology, open culture, and entrepreneurship, leading to a diverse range of experiences.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/about/coworking.jpeg"
width="750"
height="364"
srcset="https://albanpetit.com/about/coworking_hua713f87aa2785547b37bfc1e04e9a2dd_43809_480x0_resize_q75_box.jpeg 480w, https://albanpetit.com/about/coworking_hua713f87aa2785547b37bfc1e04e9a2dd_43809_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
alt="Coworking"
class="gallery-image"
data-flex-grow="206"
data-flex-basis="494px"
> &lt;img src="https://albanpetit.com/about/fablab.jpeg"
width="1024"
height="683"
srcset="https://albanpetit.com/about/fablab_hufc3c6a1b28f709622b5c42acebbecb57_65322_480x0_resize_q75_box.jpeg 480w, https://albanpetit.com/about/fablab_hufc3c6a1b28f709622b5c42acebbecb57_65322_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
alt="Fablab"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>Today, &lt;a class="link" href="https://lamachinerie.org" target="_blank" rel="noopener"
>La Machinerie&lt;/a> brings together 4 major areas of activity:&lt;/p>
&lt;ul>
&lt;li>A business incubator&lt;/li>
&lt;li>A coworking space&lt;/li>
&lt;li>A Fablab&lt;/li>
&lt;li>La Manufacture, a service aimed at professionals wishing to develop prototypes or small manufacturing series. (electronics, furniture, functional part, connected object)&lt;/li>
&lt;/ul>
&lt;p>Situated in the heart of Amiens, near the train station, the Fablab frequently welcomes visitors whom I assist during open sessions for their diverse technical projects. Many students from local schools also frequent the Fablab for their study-related projects.&lt;/p>
&lt;div class="mapouter">
&lt;div class="gallery gmap_canvas">
&lt;iframe style="width: 100%;" height="400" id="gmap_canvas" src="https://maps.google.com/maps?q=1B%20rue%20de%20la%20vall%C3%A9e,%2080000&amp;t=k&amp;z=17&amp;ie=UTF8&amp;iwloc=&amp;output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0">&lt;/iframe>
&lt;/div>
&lt;/div>
&lt;h2 id="personal-projects">Personal projects&lt;/h2>
&lt;p>In addition to my activities at La Machinerie, I am utilizing this website as a platform to document my personal projects, which are undertaken both within La Machinerie&amp;rsquo;s Fablab and my personal workshop.&lt;/p>
&lt;h2 id="contact">Contact&lt;/h2>
&lt;p>Please feel free to contact me via email at &lt;a class="link" href="mailto:contact@albanpetit.com" >contact@albanpetit.com&lt;/a> or on &lt;a class="link" href="https://twitter.com/Padh_" target="_blank" rel="noopener"
>Twitter&lt;/a> for any information, advice, questions, or modifications regarding this website.&lt;/p>
&lt;p>Enjoy your visit ! &amp;#x1f604;&lt;/p></description></item><item><title>Archives</title><link>https://albanpetit.com/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://albanpetit.com/archives/</guid><description/></item><item><title>Search</title><link>https://albanpetit.com/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albanpetit.com/search/</guid><description/></item></channel></rss>