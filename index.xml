<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alban Petit</title><link>https://albanpetit.com/</link><description>Recent content on Alban Petit</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 05 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://albanpetit.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Principles and practices</title><link>https://albanpetit.com/assignments/principles-pratices/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><guid>https://albanpetit.com/assignments/principles-pratices/</guid><description>&lt;img src="https://blog.arduino.cc/wp-content/uploads/2018/08/F2AF455JKIKCY2N.LARGE_-1024x761.jpg" alt="Featured image of post Principles and practices" />&lt;p>After a long reflection on my final FabAcademy project. I keep two, a split-flap display and a pick and place. I still can&amp;rsquo;t choose between these two projects, I will make the choice later during my FabAcademy. So here&amp;rsquo;s a quick rundown of those ideas.&lt;/p>
&lt;h2 id="split-flap-display">Split flap display&lt;/h2>
&lt;p>So my first idea is to make an open source split-flap display, or sometimes simply a flap display, is a digital electromechanical display device that presents changeable alphanumeric text, and occasionally fixed graphics.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/principles-pratices/splitflap-1.jpg"
width="674"
height="800"
srcset="https://albanpetit.com/assignments/principles-pratices/splitflap-1_hu673fe54d9307bbd42f3d15c81e781d45_50988_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/splitflap-1_hu673fe54d9307bbd42f3d15c81e781d45_50988_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Split flap module"
class="gallery-image"
data-flex-grow="84"
data-flex-basis="202px"
> &lt;img src="https://albanpetit.com/assignments/principles-pratices/splitflap-2.jpg"
width="1650"
height="870"
srcset="https://albanpetit.com/assignments/principles-pratices/splitflap-2_hub820eaf2247b92cfab2cd6e4560b5a6e_667878_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/splitflap-2_hub820eaf2247b92cfab2cd6e4560b5a6e_667878_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="Splitflap display"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="455px"
>&lt;/p>
&lt;p>Often used as a public transport timetable in airports or railway stations, as such they are often called Solari boards after Italian display manufacturer &lt;a class="link" href="https://www.solari.it/it/" target="_blank" rel="noopener"
>Solari di Udine&lt;/a>, or in Central European countries they are called Pragotron after the Czech manufacturer.&lt;/p>
&lt;p>Split-flap displays were once commonly used in consumer digital clocks known as flip clocks.&lt;/p>
&lt;p>Each character position or graphic position has a collection of flaps on which the characters or graphics are painted or silkscreened. These flaps are precisely rotated to show the desired character or graphic.&lt;/p>
&lt;h3 id="concept">Concept&lt;/h3>
&lt;p>The idea of this project is to design a split-flap display module capable of displaying a character. But that it is connectable in chains and addressed to control them individually as could be addressable LEDs, for example.&lt;/p>
&lt;p>The display module would have its internal logic, with the ability to initialize (some sort of zero position), to manage its voltage levels, the rotation according to the character sent to the data bus, etc. The modules must be connectable to each other in all directions, a system for selecting the next module is necessary to allow the formation of a matrix of modules.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/principles-pratices/schema.svg"
loading="lazy"
alt="Display schematic"
>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>A control PCB for the whole module matrix is also necessary, it will support a wifi connection to be able to select the information to be displayed from a web interface.&lt;/p>
&lt;p>Here is a short video of &lt;code>Oat foundry&lt;/code> split-flap display :&lt;/p>
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/pINtnKBfqLE"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h3 id="links">Links&lt;/h3>
&lt;p>Here is a list of resources that is close to what I would like to achieve with this project, these are potential points of inspiration.&lt;/p>
&lt;h4 id="oat-foundry">Oat Foundry&lt;/h4>
&lt;p>&lt;img src="https://www.oatfoundry.com/wp-content/uploads/2016/05/Oat-Foundry-logo.png" style="float:left; width:150px; margin-right:20px">
&lt;a class="link" href="https://www.oatfoundry.com/split-flap/" target="_blank" rel="noopener"
>Oat foundry&lt;/a> manufactures and sells custom split flap displays. Their displays are manufactured with the same operating principle as the original split-flap display but with a control system allowing them to display data streams such as weather, temperature, social networks, from a web interface.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/principles-pratices/oatfoundry-1.jpg"
width="1280"
height="854"
srcset="https://albanpetit.com/assignments/principles-pratices/oatfoundry-1_hud2f795f73979e3a632d713a990785e4d_330346_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/oatfoundry-1_hud2f795f73979e3a632d713a990785e4d_330346_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="google split-flap"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://albanpetit.com/assignments/principles-pratices/oatfoundry-2.jpeg"
width="1500"
height="1500"
srcset="https://albanpetit.com/assignments/principles-pratices/oatfoundry-2_hu8d3b1c8a17eecc7b8779ce9bd95b38e6_408922_480x0_resize_q75_box.jpeg 480w, https://albanpetit.com/assignments/principles-pratices/oatfoundry-2_hu8d3b1c8a17eecc7b8779ce9bd95b38e6_408922_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
alt="white split-flap"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="240px"
>&lt;/p>
&lt;h4 id="unknown-domain">Unknown Domain&lt;/h4>
&lt;p>&lt;a class="link" href="http://unknowndomain.co.uk" target="_blank" rel="noopener"
>Unknow Domain&lt;/a> is the blog by Mark Lynch a maker, who designed a split-flap display solution, the files are not open source but he writes in the different stages of the design. Some technical choices are quite interesting, other projects are also available on his blog.&lt;/p>
&lt;p>Here are some pictures of his projects:&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/principles-pratices/unknowdomain-1.jpeg"
width="576"
height="384"
srcset="https://albanpetit.com/assignments/principles-pratices/unknowdomain-1_hu8ad4ba0210d027b50dda8fa59b91eaf7_47214_480x0_resize_q75_box.jpeg 480w, https://albanpetit.com/assignments/principles-pratices/unknowdomain-1_hu8ad4ba0210d027b50dda8fa59b91eaf7_47214_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
alt="unknow domain small display"
class="gallery-image"
data-flex-grow="150"
data-flex-basis="360px"
> &lt;img src="https://albanpetit.com/assignments/principles-pratices/unknowdomain-2.png"
width="576"
height="432"
srcset="https://albanpetit.com/assignments/principles-pratices/unknowdomain-2_hu310e2a4e0cb48817224074eb43bbfbd1_181442_480x0_resize_box_3.png 480w, https://albanpetit.com/assignments/principles-pratices/unknowdomain-2_hu310e2a4e0cb48817224074eb43bbfbd1_181442_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="unknow domain module"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Hackaday blog post :&lt;/strong> &lt;a class="link" href="https://hackaday.com/2014/10/04/split-flap-display-if-cant-find-it-built-it/" target="_blank" rel="noopener"
>split flaps display: if you can&amp;rsquo;t find it, built it&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4 id="thingiverse-projects">Thingiverse projects&lt;/h4>
&lt;p>&lt;img src="thingiverse.png" style="float:left; width:130px; margin-right:20px">
And here is the magic of Thingiverse. Thingiverse is a website dedicated to the sharing of user-created digital design files.&lt;/p>
&lt;p>Several similar projects are available on Thingiverse, rarely complete, rarely finished, but they are great source of inspiration to determine valid technical solutions.&lt;/p>
&lt;p>Here is a non-exhaustive list :&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.thingiverse.com/thing:2369832" target="_blank" rel="noopener"
>Dead simple split flap display&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.thingiverse.com/thing:815981" target="_blank" rel="noopener"
>Laser cut weather station&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.thingiverse.com/thing:841058" target="_blank" rel="noopener"
>Weather in one hour&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.thingiverse.com/thing:3402311" target="_blank" rel="noopener"
>Split-flap display&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="pick-and-place">Pick and place&lt;/h2>
&lt;p>Surface-mount technology component placement systems, commonly called pick-and-place machines or P&amp;amp;Ps, are robotic machines which are used to place surface-mount devices onto a printed circuit board.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/principles-pratices/pnp-1.jpg"
width="1920"
height="1080"
srcset="https://albanpetit.com/assignments/principles-pratices/pnp-1_huabe2956f5a4a8e284b2906dde73c75a3_385481_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/pnp-1_huabe2956f5a4a8e284b2906dde73c75a3_385481_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="PnP nozzles"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
> &lt;img src="https://albanpetit.com/assignments/principles-pratices/pnp-2.jpg"
width="1280"
height="720"
srcset="https://albanpetit.com/assignments/principles-pratices/pnp-2_huff4c09089251af9e8ebab2cb35016a6b_101391_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/pnp-2_huff4c09089251af9e8ebab2cb35016a6b_101391_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="pnp"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>They are used for high speed, high precision placing of a broad range of electronic components, like capacitors, resistors, integrated circuits onto the PCBs which are in turn used in computers, consumer electronics as well as industrial, medical, automotive, military and telecommunications equipment.&lt;/p>
&lt;p>Similar equipment exists for through-hole components. This type of equipment is sometimes also used to package microchips using the flip chip method.&lt;/p>
&lt;h3 id="concept-1">Concept&lt;/h3>
&lt;p>The description of this project will be rather quick, the idea is to design a small open source automatic electronic component placement machine. Several open source projects already exist, but in general, these machines are big.&lt;/p>
&lt;p>&lt;img src="openpnp.png" style="float:left; width:120px; margin-right:20px">
A fairly large maker community offers hardware solutions, the &lt;a class="link" href="https://openpnp.org" target="_blank" rel="noopener"
>OpenPnp&lt;/a> website includes most of them. OpenPnp also offers software to run an open source pick and place machine, but also existing commercial machines, giving them abilities they never had with their OEM software.&lt;/p>
&lt;p>The idea would be to rely on the OpenPnp software to design a small format automatic placement solution.&lt;/p>
&lt;h3 id="links-1">Links&lt;/h3>
&lt;p>Here is a list of resources that is close to what I would like to achieve with this project, these are potential points of inspiration.&lt;/p>
&lt;h4 id="lumenpnp">LumenPnp&lt;/h4>
&lt;p>&lt;a class="link" href="https://opulo.io/products/lumenpnp-kit" target="_blank" rel="noopener"
>LumenPnp&lt;/a> is a fully open source PNP machine designed by Stephen Hawes. He describes each stage of his design on his YouTube channel. He has been selling kits recently, to be able to mount this machine which relies on the OpenPnp solution for its control.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/principles-pratices/lumenpnp-1.jpg"
width="2000"
height="1500"
srcset="https://albanpetit.com/assignments/principles-pratices/lumenpnp-1_hu88e812515d6938308e877384806350a0_200861_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/lumenpnp-1_hu88e812515d6938308e877384806350a0_200861_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="PnP nozzles"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
> &lt;img src="https://albanpetit.com/assignments/principles-pratices/lumenpnp-2.jpg"
width="5736"
height="3784"
srcset="https://albanpetit.com/assignments/principles-pratices/lumenpnp-2_hudf5cc100a3fa0381ddaef46de09f42e8_593017_480x0_resize_q75_box.jpg 480w, https://albanpetit.com/assignments/principles-pratices/lumenpnp-2_hudf5cc100a3fa0381ddaef46de09f42e8_593017_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="PnP"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="363px"
>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Github repository :&lt;/strong> &lt;a class="link" href="https://github.com/index-machines/index" target="_blank" rel="noopener"
>Index pnp&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4 id="liteplacer">LitePlacer&lt;/h4>
&lt;p>&lt;a class="link" href="https://liteplacer.com/" target="_blank" rel="noopener"
>LitePlacer&lt;/a> is a machine designed by Juha Kuusama, who needed an automatic electronic component placement machine for his company to speed up the development process and to save the cost of outsourcing the assembly. This machine also relies on the OpenPnp software to work, it is even now one of the official designs of OpenPnp.&lt;/p>
&lt;p>Introduction video to LitePlacer :
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/T_v2VJKNZQ0"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;h2 id="final-checklist">Final Checklist&lt;/h2>
&lt;p>Here are the objectives of this assignment of the Fabacademy and the verification of the good realization of these:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Describe and sketch your final project&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Describe what it will do and who will use it&lt;/li>
&lt;/ul></description></item><item><title>Project management</title><link>https://albanpetit.com/assignments/project-management/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://albanpetit.com/assignments/project-management/</guid><description>&lt;img src="https://miro.medium.com/max/1838/0*cDOBWTUhmdzmVkTd" alt="Featured image of post Project management" />&lt;p>First of all, I&amp;rsquo;m web developer, so I&amp;rsquo;m quite comfortable with Git, continuous integration principles, markdown, bash and static site generators. So for this assignment I tried to go to unknown lands with the aim of discovering some static site generator that I don&amp;rsquo;t know.&lt;/p>
&lt;p>Also note that this site will also serve me as a blog, so it is available on the url of the Fabacademy : &lt;a class="link" href="https://fabacademy.org/2020/labs/lamachinerie/students/alban-petit/" target="_blank" rel="noopener"
>https://fabacademy.org/2020/labs/lamachinerie/students/alban-petit/&lt;/a>, but also on my personal domain name : &lt;a class="link" href="https://albanpetit.com" target="_blank" rel="noopener"
>https://albanpetit.com&lt;/a>.&lt;/p>
&lt;p>Finally this is my second year of fabacademy, not having been able to validate the first, I preferred for this assignment to change SSG, so there is documentation for Docusaurus and for Hugo.&lt;/p>
&lt;p>Enjoy 😄&lt;/p>
&lt;h2 id="git">Git&lt;/h2>
&lt;p>&lt;img src="git.png" style="float:left; width:150px; margin-right:20px">
Git is a version control system, widely adopted in the software development and opensource community. Multiple web platform provide free or lowcost solution to host repository : Github, Gitlab, Bitbucket&amp;hellip;&lt;/p>
&lt;p>&lt;a class="link" href="https://git-scm.com/doc" target="_blank" rel="noopener"
>More informations about git here&lt;/a>&lt;/p>
&lt;h3 id="setup-git">Setup git&lt;/h3>
&lt;h4 id="install-git">Install git&lt;/h4>
&lt;p>Before starting anything, git is needed to deal with repository, so, let&amp;rsquo;s install it. Even if it&amp;rsquo;s installed, it&amp;rsquo;s a good idea to update it.&lt;/p>
&lt;ul>
&lt;li>macOs :
On Mac, the easiest way is to install it with &lt;code>Xcode&lt;/code> command line tool, you can do this simply by trying to run a git command from the terminal :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>If you don&amp;rsquo;t have it installed already, it will prompt you to install it.&lt;/li>
&lt;li>linux:
On linux you can use &lt;code>apt&lt;/code>, it&amp;rsquo;s a command line interface for the package management system on debian based distribution, so with a terminal, run :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>windows ( best idea is to install linux )
Managing windows software can be really annoying and time-consuming, some software can resolve this problem like &lt;code>chocolatey&lt;/code>, so with powershell :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Set-ExecutionPolicy&lt;/span> &lt;span class="n">Bypass&lt;/span> &lt;span class="n">-Scope&lt;/span> &lt;span class="k">Process&lt;/span> &lt;span class="n">-Force&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="no">System.Net.ServicePointManager&lt;/span>&lt;span class="p">]::&lt;/span>&lt;span class="n">SecurityProtocol&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="no">System.Net.ServicePointManager&lt;/span>&lt;span class="p">]::&lt;/span>&lt;span class="n">SecurityProtocol&lt;/span> &lt;span class="o">-bor&lt;/span> &lt;span class="mf">3072&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">iex &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nb">New-Object&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WebClient&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="py">DownloadString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://community.chocolatey.org/install.ps1&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>Now you can install git, also with powershell :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">choco&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">git&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="generate-ssh-key">Generate SSH key&lt;/h4>
&lt;p>When you work with git, a good idea to commit a small amount of modifications so that you can roll back anytime, if something goes wrong. But with a basic configuration each time you want to push a commit gitlab or github requires authentification. I&amp;rsquo;m a lazy guy, so I use &lt;code>SSH&lt;/code>, ssh-key security is a very good way to authentify everywhere. ssh-key are based on asymetric cryptography protocol. Which mean that when you generate a key, the program gives you a public key which can be shared with every one, and a private one which shouldn’t. When a website want to check you’re identity it can send a bunch of data encrypted using your public key, then to decrypt the data, the private key is needed, in theory only you’re computer should be able to decrypt the data and autentify. To create a new SSH key pair:&lt;/p>
&lt;ol>
&lt;li>Open a terminal&lt;/li>
&lt;li>Generate a new SSH key pair:
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -C &lt;span class="s2">&amp;#34;email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Copy the ssh &lt;strong>public key&lt;/strong> :
&lt;ul>
&lt;li>macOs :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pbcopy &amp;lt; ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>linux (require xclip**) :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xclip -sel clip &amp;lt; ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>windows git bash :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat ~/.ssh/id_rsa.pub &lt;span class="p">|&lt;/span> clip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Put the &lt;code>SSH&lt;/code> to gitlab or github parameters&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;strong>Tips&lt;/strong> : Command to install xclip, debian/ubuntu, &lt;code>sudo apt install xclip&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h4 id="define-git-user-parameters">Define git user parameters&lt;/h4>
&lt;h5 id="git-indentity">Git indentity&lt;/h5>
&lt;p>The first thing you should do when you install Git is to set your user name and email address. This is important because every Git commit uses this information, and it’s immutably baked into the commits you start creating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global user.name &lt;span class="s2">&amp;#34;firstname lastname&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.email email@example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You need to do this only once if you pass the &amp;ndash;global option, because then Git will always use that information for anything you do on that system. If you want to override this with a different name or email address for specific projects, you can run the command without the &amp;ndash;global option when you’re in that project.&lt;/p>
&lt;h5 id="git-default-editor">Git default editor&lt;/h5>
&lt;p>You can configure the default text editor that will be used when Git needs you to type in a message. If not configured, Git uses your system’s default editor.
If you want to use a different text editor, such as Emacs, you can do the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global core.editor emacs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On a Windows system, if you want to use a different text editor, you must specify the full path to its executable file. This can be different depending on how your editor is packaged.&lt;/p>
&lt;h5 id="review-the-configuration">Review the configuration&lt;/h5>
&lt;p>Git provide a command to check the configuration settings :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-command-line">Git command line&lt;/h3>
&lt;p>Here is a list of basic git command to interact with repostories.&lt;/p>
&lt;h4 id="git-clone">Git clone&lt;/h4>
&lt;p>&lt;code>git clone&lt;/code> allow to make a local copy of an online repository. See below how to use it :&lt;/p>
&lt;ol>
&lt;li>Open a terminal&lt;/li>
&lt;li>Point at the folder of your choice :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /ideal/path
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Clone the repo with the command &lt;code>git clone&lt;/code>, two solutions with &lt;code>ssh&lt;/code> or &lt;code>http&lt;/code>:
If you have a ssh key configured, with the gitlab of the fabacademy :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SSH version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone git@gitlab.fabcloud.org:academany/fabacademy/2020/labs/lamachinerie/students/alban-petit.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HTTP version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://gitlab.fabcloud.org/academany/fabacademy/2020/labs/lamachinerie/students/alban-petit.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Now, you can run &lt;code>ls&lt;/code> command to list the files in the current directory :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ls -al
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h4 id="git-pull">Git pull&lt;/h4>
&lt;p>Incorporates changes from a remote repository into the current branch.&lt;/p>
&lt;ol>
&lt;li>Go to a git repository in your local files :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /my/awesome/repository
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Now you can update your local files with changes available online :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git pull
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h4 id="git-add">Git add&lt;/h4>
&lt;p>This command updates the index using the current content found in the working tree, to prepare the content staged for the next commit.&lt;/p>
&lt;ul>
&lt;li>To take a snapshot of the contents of all files under the current directory :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>To take a snapshot of all files :
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add -A
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h4 id="git-commit">Git commit&lt;/h4>
&lt;p>&lt;code>git commit&lt;/code> updates the index using the current content found in the working tree, to prepare the content staged for the next commit.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can replace &amp;ldquo;message&amp;rdquo; with your commit message. For example: &amp;ldquo;🎉 initial commit&amp;rdquo;.
A second &lt;code>-m&lt;/code> parameter allow you to add a second message to the commit, the first one must be short, but the second allows to go further in the explanations concerning the modifications made with this commit, see below :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span> -m &lt;span class="s2">&amp;#34;full description about the modifications&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="git-push">Git push&lt;/h4>
&lt;p>Updates remote repository using local snapshot of the content.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git push
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vscode">VScode&lt;/h3>
&lt;p>&lt;img src="vscode.png" style="float:left; width:160px; margin-right:10px">
I personally use VScode to program and work on my project.&lt;/p>
&lt;p>VScode have Git possibilities integrated, and you can make all the commit/push/pull command directly inside it. Just click on the icon named &amp;ldquo;Souce Control&amp;rdquo; in the left panel inside VScode, and you will find all the command to commit/push/pull your modifications.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/project-management/vscode-source-control.png"
width="1334"
height="538"
srcset="https://albanpetit.com/assignments/project-management/vscode-source-control_hu0ef9d05858284b956f407efdf951c117_34262_480x0_resize_box_3.png 480w, https://albanpetit.com/assignments/project-management/vscode-source-control_hu0ef9d05858284b956f407efdf951c117_34262_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="VScode source control"
class="gallery-image"
data-flex-grow="247"
data-flex-basis="595px"
>&lt;/p>
&lt;h3 id="commit-name-convention">Commit name convention&lt;/h3>
&lt;p>With Git, and big projects, commits can get messy quickly, especially if several people work on it, trust me, so it can be good to use a convention. Good commit messages serve at least three important purposes:&lt;/p>
&lt;ul>
&lt;li>To speed up the reviewing process&lt;/li>
&lt;li>To help us write a good release note&lt;/li>
&lt;li>To help the future/other maintainers of the project&lt;/li>
&lt;/ul>
&lt;p>Personally I try to use this method as often as possible :&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;type&amp;gt; &amp;lt;sujet&amp;gt;
&amp;lt;description&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;strong>Type&lt;/strong> defines the type of commit
&lt;ul>
&lt;li>&lt;strong>build&lt;/strong>: build solution (gulp, webpack, npm)&lt;/li>
&lt;li>&lt;strong>ci&lt;/strong>: Continuous integration (Travis, Circle, BrowserStack, SauceLabs)&lt;/li>
&lt;li>&lt;strong>docs&lt;/strong>: Documentation&lt;/li>
&lt;li>&lt;strong>feat&lt;/strong>: Add feature&lt;/li>
&lt;li>&lt;strong>fix&lt;/strong>: bug fix&lt;/li>
&lt;li>&lt;strong>perf&lt;/strong>: Performance improvement&lt;/li>
&lt;li>&lt;strong>refactor&lt;/strong>: Code changement which does not change the usage&lt;/li>
&lt;li>&lt;strong>style&lt;/strong>: Style modification&lt;/li>
&lt;li>&lt;strong>test&lt;/strong>: Tests modification&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Sujet&lt;/strong> contains a brief description of the changes
Using the present imperative (&amp;ldquo;change&amp;rdquo;, not &amp;ldquo;changed&amp;rdquo; or &amp;ldquo;changes&amp;rdquo;)
Without capital letter at the beginning
No &amp;ldquo;.&amp;rdquo; at the end of the description&lt;/li>
&lt;li>&lt;strong>Description&lt;/strong> allows to detail in more detail the motivations behind the change. The rules are the same as for the Subject part.&lt;/li>
&lt;/ul>
&lt;p>To define the type of commit, you can use another solution : &lt;a class="link" href="https://github.com/carloscuesta/gitmoji" target="_blank" rel="noopener"
>Gitmoji&lt;/a>&lt;/p>
&lt;h2 id="static-site-generator">Static site generator&lt;/h2>
&lt;h3 id="docusaurus">Docusaurus&lt;/h3>
&lt;p>&lt;img src="https://docusaurus.io/img/docusaurus.svg" style="float:left; width:150px; margin-right:20px">
Docusaurus is a Facebook dev team project for easily building, deploying, and maintaining open source project websites.&lt;/p>
&lt;p>This website is running with the alpha release Docusaurus : Docusaurus 2.
Docusaurus 1 used to be a pure documentation site generator. Docusaurus 2, was rebuilt, allowing for more customizability, so now it can feat to content-driven websites (Documentation, Blogs, Product Landing and Marketing Pages, etc) extremely fast.&lt;/p>
&lt;h4 id="install">Install&lt;/h4>
&lt;p>The easiest way to install Docusaurus is to use the command line tool that helps you scaffold a skeleton Docusaurus website :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npx @docusaurus/init@next init &lt;span class="o">[&lt;/span>name&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>template&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace [name] and [template].&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="development-server">Development server&lt;/h4>
&lt;p>Command to run the dev server :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="o">[&lt;/span>name&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Replace [name]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yarn start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default, a browser window will open at &lt;code>http://localhost:3000&lt;/code>.&lt;/p>
&lt;h4 id="build">Build&lt;/h4>
&lt;p>So, Docusaurus is a static site generator, the end goal is to transform all the markdown into an HTML file, to be able to host it on a server and then open it with a browser. Soon, gitlab or github will work there for us, but for the moment, we must check that the site is building correctly, for that :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yarn run build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Contents will be generated within the &lt;code>/build&lt;/code> directory.&lt;/p>
&lt;h4 id="gitlab-pages">Gitlab Pages&lt;/h4>
&lt;img src="gitlab.png" style="float:left; width:150px; margin-right:20px">
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Continuous Integration&lt;/strong> is the practice of merging all the code that is being produced by developers. The merging usually takes place several times a day in a shared repository. From within the repository, or production environment, building and automated testing are carried out that ensure no integration issues and the early identification of any problems.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Continuous Delivery&lt;/strong> adds that the software can be released to production at any time, often by automatically pushing changes to a staging system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Continuous Deployment&lt;/strong> goes further and pushes changes to production automatically.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>This project is put into production with each modification of the &lt;strong>Master branch&lt;/strong> of the gitlab repository.
So I use for this the integrated solution to gitlab, &lt;strong>Gitlab CI&lt;/strong> to do this.&lt;/p>
&lt;p>So each time a commit is sent, a docker container instance will be launched by gitlab to build the application.
This procedure is described in the yaml file: &lt;code>.gitlab-ci.yml&lt;/code>.&lt;/p>
&lt;p>The container will therefore build the application and transfer the final files from the application to a second feature of gitlab, &lt;strong>Gitlab Pages&lt;/strong> which allows hosting of static websites.&lt;/p>
&lt;p>Here is the file to put at the root of the project, &lt;code>/.gitlab-ci.yml&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node:9.11.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">pages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ls -al&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">yarn install&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">yarn build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mkdir ./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mv ./build/* ./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">artifacts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now let&amp;rsquo;s push the modification to the repository :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add -A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;👷‍♂️ init gitlab pages&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And just watch gitlab do the work for us :&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/project-management/gitlab-success.png"
width="1268"
height="748"
srcset="https://albanpetit.com/assignments/project-management/gitlab-success_hucf31e8a3dc443f7fb36100f2f6f33a25_46140_480x0_resize_box_3.png 480w, https://albanpetit.com/assignments/project-management/gitlab-success_hucf31e8a3dc443f7fb36100f2f6f33a25_46140_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Deploy success with gitlab"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="406px"
>&lt;/p>
&lt;h3 id="hugo">Hugo&lt;/h3>
&lt;p>Unlike Docusaus, which was built with the idea of quickly making documentation sites for IT projects, Hugo was built to be more flexible. Small bonus it is developed in &lt;code>Go&lt;/code> which allows it to be extremely fast.&lt;/p>
&lt;h4 id="install-1">Install&lt;/h4>
&lt;p>The quickest way to install hugo is to download the appropriate binary version on the official github and put in &lt;code>/usr/local/bin&lt;/code> or any directory in yout &lt;code>PATH&lt;/code>. But better way to install it, is to use a package manager so :&lt;/p>
&lt;ul>
&lt;li>macOs :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>linux :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>windows with &lt;code>chocolatey&lt;/code> :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">choco install hugo -confirm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Fun fact&lt;/strong>: On my mac hugo work fine, but on the linux side, the development server won&amp;rsquo;t run, after some research multiple version of Hugo are available, to build and minify &lt;code>sccs&lt;/code> the extended version is needed, so to install it : &lt;a class="link" href="https://vdshk.me/post/how-to-install-hugo-extended-on-ubuntu-20-04/" target="_blank" rel="noopener"
>Hugo extended version&lt;/a>&lt;/p>
&lt;p>The same problem occur on windows : &lt;a class="link" href="https://gohugo.io/getting-started/installing/#windows" target="_blank" rel="noopener"
>Hugo extended on windows&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4 id="generate-hugo-files">Generate Hugo files&lt;/h4>
&lt;p>Time to generate the hugo files structure :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site myAwesomeWebsite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="development-server-1">Development server&lt;/h4>
&lt;p>Command to run the dev server :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default, a browser window will open at &lt;code>http://localhost:1313&lt;/code>.&lt;/p>
&lt;h4 id="build-1">Build&lt;/h4>
&lt;p>Exactly like Docusaurus, you must first check that the generation of HTML files is done correctly :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="gitlab-pages-1">Gitlab Pages&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">registry.gitlab.com/pages/hugo:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">GIT_SUBMODULE_STRATEGY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">recursive&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">pages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">artifacts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="github-pages">Github Pages&lt;/h4>
&lt;p>Unlike Gitlab Pages, the configuration must be in a folder with a specific name so :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> myAwesomeProject
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir .github
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir .github/workflows
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">touch .github/workflows/gh-pages.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And here is the content of the file :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github-pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">workflow_dispatch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;latest&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">github_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Fun fact&lt;/strong>: with a custom domain name, the DNS configuration of github reset at each push and build, after some research, Github pages need a &lt;code>CNAME&lt;/code> file at the root folder of the builded elements with as unique content the target domain. it took me a few days to understand &amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;p>Time to push the modifications to the repository :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add -A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;👷‍♂️ init gitlab pages&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>And finally :&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/assignments/project-management/github-success.png"
width="1301"
height="580"
srcset="https://albanpetit.com/assignments/project-management/github-success_hubed6250b0c03d39587c6287556385e91_55895_480x0_resize_box_3.png 480w, https://albanpetit.com/assignments/project-management/github-success_hubed6250b0c03d39587c6287556385e91_55895_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Deploy success with github to albanpetit.com"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="538px"
>&lt;/p>
&lt;h2 id="final-checklist">Final Checklist&lt;/h2>
&lt;p>For this week we had to :&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Build our Site :
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Edit the template site&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Describe ourself : &lt;a class="link" href="https://albanpetit.com/about" >About me&lt;/a>&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Describe our final project : &lt;a class="link" href="https://albanpetit.com/assignments/principles-pratices" >Principles and practices&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Document our work using git&lt;/li>
&lt;/ul></description></item><item><title>FabAcademy Student agreement</title><link>https://albanpetit.com/fabacademy-student-agreement/</link><pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate><guid>https://albanpetit.com/fabacademy-student-agreement/</guid><description>&lt;p>&lt;strong>FabAcademy Student Agreement&lt;/strong>&lt;/p>
&lt;p>&lt;em>The FabAcademy is responsible for:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Teaching principles and practices of digital fabrication&lt;/li>
&lt;li>Arranging lectures, recitations, meetings, and events for the class&lt;/li>
&lt;li>Evaluating and providing feedback on student work&lt;/li>
&lt;li>Offering clear standards for completing assignments&lt;/li>
&lt;li>Certifying and archiving student progress&lt;/li>
&lt;li>Supervising class preparation&lt;/li>
&lt;li>Reviewing prospective students, instructors, and labs&lt;/li>
&lt;li>Providing central staff and infrastructure for students, instructors, and labs&lt;/li>
&lt;li>Fund-raising for costs not covered by student tuition&lt;/li>
&lt;li>Managing and reporting on the program&amp;rsquo;s finances, results, and impacts&lt;/li>
&lt;li>Publicizing the program&lt;/li>
&lt;li>Promoting a respectful environment free of harassment and discrimination&lt;/li>
&lt;li>Encourage a diverse, accessible, and equitable community&lt;/li>
&lt;/ul>
&lt;p>&lt;em>I am a FabAcademy student, responsible for:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Attending class lectures and participating in reviews&lt;/li>
&lt;li>Developing and documenting projects assigned to introduce and demonstrate skills&lt;/li>
&lt;li>Allowing the FabAcademy to share my work (with attribution) in the class for purposes compatible with its mission&lt;/li>
&lt;li>Honestly reporting on my work, and appropriately attributing the work of others (both human and machine)&lt;/li>
&lt;li>Working safely&lt;/li>
&lt;li>Leaving workspaces in the same (or better) condition than I found them&lt;/li>
&lt;li>Participating in the upkeep of my lab&lt;/li>
&lt;li>Ensuring that my tuition for local and central class costs is covered&lt;/li>
&lt;li>Following locally applicable health and safety guidance&lt;/li>
&lt;li>Promoting a respectful environment free of harassment and discrimination&lt;/li>
&lt;/ul>
&lt;p>Signed by committing this file in my repository,
&lt;strong>Alban Petit&lt;/strong>&lt;/p></description></item><item><title>About me</title><link>https://albanpetit.com/about/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://albanpetit.com/about/</guid><description>&lt;img src="https://albanpetit.com/about/lamachinerie.jpg" alt="Featured image of post About me" />&lt;p>Hello! I&amp;rsquo;m Alban Petit, a passionate French web developer working at La Machinerie, a facility that houses a Fablab. I&amp;rsquo;ve been involved with this organization for the past 7 years, starting as a volunteer and eventually becoming responsible for a department that offers a range of technical services, including electronics, programming, and digital fabrication.&lt;/p>
&lt;p>Through my work experiences and interactions at La Machinerie, I discovered a strong passion for software development, electronics, and prototyping in general.&lt;/p>
&lt;h2 id="my-experiences">My Experiences&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Assistant FabManager, La Machinerie Association&lt;/strong>, 2015 - 2016, Amiens&lt;/p>
&lt;p>La Machinerie houses a Fablab that caters to entrepreneurs, designers, artists, DIY enthusiasts, students, and hackers, providing a space to rapidly transition from concept to prototyping. As a FabManager, I was in charge of managing this facility.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>BTS Apprenticeship, Etoele Company&lt;/strong>, 2016 - 2018, Amiens&lt;/p>
&lt;p>Etoele is a research bureau that serves both individuals and professionals, including large-scale industrial clients. During my time there, I worked on various projects, including embedded development, electronic prototyping, custom web development, web services architecture, IoT development, signal processing, robotics, 3D scanning, and reverse engineering.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Bachelor&amp;rsquo;s Degree Apprenticeship in Computer Science, Etoele Company&lt;/strong>, 2018 - 2019, Amiens&lt;/p>
&lt;p>During this period, I continued my role as a web and embedded developer at Etoele.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Web &amp;amp; Embedded developer, Etoele Company&lt;/strong>, 2019 - 2021, Amiens&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Head of Manufacturing Department, La Machinerie Association&lt;/strong>, 2022 - 2023, Amiens&lt;/p>
&lt;p>Currently, I hold the position of head of the manufacturing department at La Machinerie, where we assist professionals in developing prototypes in areas such as electronics, furniture, functional parts, and connected devices.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="la-machinerie">La Machinerie&lt;/h2>
&lt;p>La Machinerie is an association that was founded in April 2014 by a group of idealistic individuals in Amiens who aspired to &amp;ldquo;create and work differently.&amp;rdquo; It encompasses a Fablab and coworking space, drawing inspiration from the Fablab movement to provide an accessible community resource where users contribute their skills, tools, and knowledge. The collective embraces various aspirations, including citizen innovation, ecology, open culture, and entrepreneurship, leading to a diverse range of experiences.&lt;/p>
&lt;p>&lt;img src="https://albanpetit.com/about/coworking.jpeg"
width="750"
height="364"
srcset="https://albanpetit.com/about/coworking_hua713f87aa2785547b37bfc1e04e9a2dd_43809_480x0_resize_q75_box.jpeg 480w, https://albanpetit.com/about/coworking_hua713f87aa2785547b37bfc1e04e9a2dd_43809_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
alt="Coworking"
class="gallery-image"
data-flex-grow="206"
data-flex-basis="494px"
> &lt;img src="https://albanpetit.com/about/fablab.jpeg"
width="1024"
height="683"
srcset="https://albanpetit.com/about/fablab_hufc3c6a1b28f709622b5c42acebbecb57_65322_480x0_resize_q75_box.jpeg 480w, https://albanpetit.com/about/fablab_hufc3c6a1b28f709622b5c42acebbecb57_65322_1024x0_resize_q75_box.jpeg 1024w"
loading="lazy"
alt="Fablab"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>Today, &lt;a class="link" href="https://lamachinerie.org" target="_blank" rel="noopener"
>La Machinerie&lt;/a> brings together 4 major areas of activity:&lt;/p>
&lt;ul>
&lt;li>A business incubator&lt;/li>
&lt;li>A coworking space&lt;/li>
&lt;li>A Fablab&lt;/li>
&lt;li>La Manufacture, a service aimed at professionals wishing to develop prototypes or small manufacturing series. (electronics, furniture, functional part, connected object)&lt;/li>
&lt;/ul>
&lt;p>Situated in the heart of Amiens, near the train station, the Fablab frequently welcomes visitors whom I assist during open sessions for their diverse technical projects. Many students from local schools also frequent the Fablab for their study-related projects.&lt;/p>
&lt;div class="mapouter">
&lt;div class="gallery gmap_canvas">
&lt;iframe style="width: 100%;" height="400" id="gmap_canvas" src="https://maps.google.com/maps?q=1B%20rue%20de%20la%20vall%C3%A9e,%2080000&amp;t=k&amp;z=17&amp;ie=UTF8&amp;iwloc=&amp;output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0">&lt;/iframe>
&lt;/div>
&lt;/div>
&lt;h2 id="fabacademy--personal-projects">FabAcademy &amp;amp; Personal projects&lt;/h2>
&lt;p>In addition to my activities at La Machinerie, I am utilizing this website as a platform to document my personal projects, which are undertaken both within La Machinerie&amp;rsquo;s Fablab and my personal workshop. Most of the &lt;a class="link" href="https://albanpetit.com/assignments/" >FabAcademy missions&lt;/a> are also completed within La Machinerie&amp;rsquo;s Fablab.&lt;/p>
&lt;h2 id="contact">Contact&lt;/h2>
&lt;p>Please feel free to contact me via email at &lt;a class="link" href="mailto:contact@albanpetit.com" >contact@albanpetit.com&lt;/a> or on &lt;a class="link" href="https://twitter.com/Padh_" target="_blank" rel="noopener"
>Twitter&lt;/a> for any information, advice, questions, or modifications regarding this website.&lt;/p>
&lt;p>Enjoy your visit ! 😄&lt;/p></description></item><item><title>Raspberry Pi remote development as SSH with VScode</title><link>https://albanpetit.com/projects/raspberry-remote-development/</link><pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate><guid>https://albanpetit.com/projects/raspberry-remote-development/</guid><description>&lt;img src="https://d1fmx1rbmqrxrr.cloudfront.net/zdnet/optim/i/edit/ne/2019/02/Raspberry%20Pi%20620__w1200.jpg" alt="Featured image of post Raspberry Pi remote development as SSH with VScode" /></description></item><item><title>Archives</title><link>https://albanpetit.com/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://albanpetit.com/archives/</guid><description/></item><item><title>Search</title><link>https://albanpetit.com/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://albanpetit.com/search/</guid><description/></item></channel></rss>